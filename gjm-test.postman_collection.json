{
  "info": {
    "_postman_id": "b44b6b6f-496b-4089-b654-f3d0be21e33b",
    "name": "gjm-tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "Account",
      "item": [
        {
          "name": "Register",
          "item": [
            {
              "name": "Register - success - MAIN",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0f5e45a8-15f6-4c4a-b49c-568768b06352",
                    "exec": [
                      "pm.test(\"Response time is less than 500ms (first request)\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "});\r",
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct data in user obeject\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.string;\r",
                      "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"creator_name\"));\r",
                      "    pm.expect(jsonData.username).to.eql(pm.globals.get(\"creator_username\"));\r",
                      "    pm.expect(jsonData.mail).to.eql(pm.globals.get(\"creator_email\"));\r",
                      "\r",
                      "    pm.globals.set(\"creator_id\", jsonData.id); \r",
                      "    pm.globals.set(\"creator_activationToken\", jsonData.accountActivationToken); \r",
                      "    pm.globals.set(\"creator_activationEmail\", jsonData.accountActivationEmail); \r",
                      "    pm.globals.set(\"creator_iat\", jsonData.iat); \r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "12587ce9-0286-4805-a435-b21f23c1d0ce",
                    "exec": [
                      "pm.globals.set(\"creator_name\", pm.globals.replaceIn('{{$randomUserName}}'));\r",
                      "pm.globals.set(\"creator_username\", pm.globals.replaceIn('{{$randomUserName}}'));\r",
                      "pm.globals.set(\"creator_email\",  pm.globals.replaceIn('{{$randomEmail}}__'));\r",
                      "pm.globals.set(\"creator_password\",  pm.globals.replaceIn('{{$randomPassword}}'));"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"user\": {\n\t\t\"name\": \"{{creator_name}}\",\n\t\t\"username\": \"{{creator_username}}\",\n\t\t\"mail\": \"{{creator_email}}\",\n\t\t\"password\": \"{{creator_password}}\"\n\t},\n\t\"domain\": \"example.com\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/users/"
              },
              "response": []
            },
            {
              "name": "Register - username taken",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "36826eec-0e11-400d-b4ea-5f3ed157d1da",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "pm.test(\"Failed POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(400);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct error data\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data).to.eql(['username']);\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "26578965-981c-4c92-afb2-2eee0e215ac2",
                    "exec": [
                      "pm.variables.set(\"any_name\",  \"{{$randomName}}\");\r",
                      "pm.variables.set(\"any_email\",  \"{{$randomEmail}}\");\r",
                      "pm.variables.set(\"any_password\", \"{{$randomPassword}}\");"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"user\": {\n\t\t\"name\": \"{{any_name}}\",\n\t\t\"username\": \"{{creator_username}}\",\n\t\t\"mail\": \"{{any_email}}\",\n\t\t\"password\": \"{{any_password}}\"\n\t},\n\t\"domain\": \"example.com\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/users/"
              },
              "response": []
            },
            {
              "name": "Register - email taken",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1c12fac3-2a72-4950-8bdb-44cd7de65b25",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "pm.test(\"Failed POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct error data\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data).to.eql([\"email\"]);\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "c3a73743-2cb7-4c52-81ca-f51edceb65e1",
                    "exec": [
                      "pm.variables.set(\"any_name\",  \"{{$randomName}}\");\r",
                      "pm.variables.set(\"any_username\",  \"{{$randomUsername}}\");\r",
                      "pm.variables.set(\"any_password\", \"{{$randomPassword}}\");"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"user\": {\n\t\t\"name\": \"{{any_name}}\",\n\t\t\"username\": \"{{any_username}}\",\n\t\t\"mail\": \"{{creator_email}}\",\n\t\t\"password\": \"{{any_password}}\"\n\t},\n\t\"domain\": \"example.com\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/users/"
              },
              "response": []
            },
            {
              "name": "Register - email and username taken",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "addb9027-ea77-42ac-9c49-b05e986667fd",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "pm.test(\"Failed POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct error data\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.data).to.eql([\"username\", \"email\"]);\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "5b643a34-76fc-4417-85d9-d033db8f8803",
                    "exec": [
                      "pm.variables.set(\"any_name\",  \"{{$randomName}}\");\r",
                      "pm.variables.set(\"any_password\", \"{{$randomPassword}}\");"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"user\": {\n\t\t\"name\": \"{{any_name}}\",\n\t\t\"username\": \"{{creator_username}}\",\n\t\t\"mail\": \"{{creator_email}}\",\n\t\t\"password\": \"{{any_password}}\"\n\t},\n\t\"domain\": \"example.com\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/users/"
              },
              "response": []
            },
            {
              "name": "Register - success - ADMIN",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "281f6c0e-c1b3-47cc-bd80-192e17ac3277",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct data in user obeject\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.string;\r",
                      "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"admin_name\"));\r",
                      "    pm.expect(jsonData.username).to.eql(pm.globals.get(\"admin_username\"));\r",
                      "    pm.expect(jsonData.mail).to.eql(pm.globals.get(\"admin_email\"));\r",
                      "\r",
                      "    pm.globals.set(\"admin_id\", jsonData.id); \r",
                      "    pm.globals.set(\"admin_activationToken\", jsonData.accountActivationToken); \r",
                      "    pm.globals.set(\"admin_activationEmail\", jsonData.accountActivationEmail); \r",
                      "    pm.globals.set(\"admin_iat\", jsonData.iat); \r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "59abf5fe-7a70-44ba-8bb6-55ee2e02777b",
                    "exec": [
                      "pm.globals.set(\"admin_name\", pm.globals.replaceIn('{{$randomUserName}}'));\r",
                      "pm.globals.set(\"admin_username\", pm.globals.replaceIn('{{$randomUserName}}'));\r",
                      "pm.globals.set(\"admin_email\",  pm.globals.replaceIn('{{$randomEmail}}__'));\r",
                      "pm.globals.set(\"admin_password\",  pm.globals.replaceIn('{{$randomPassword}}'));"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"user\": {\n\t\t\"name\": \"{{admin_name}}\",\n\t\t\"username\": \"{{admin_username}}\",\n\t\t\"mail\": \"{{admin_email}}\",\n\t\t\"password\": \"{{admin_password}}\"\n\t},\n\t\"domain\": \"example.com\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/users/"
              },
              "response": []
            },
            {
              "name": "Register - success - ADMIN 2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c7eff252-b456-4199-9245-530bf36ccd64",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct data in user obeject\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.string;\r",
                      "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"admin_2_name\"));\r",
                      "    pm.expect(jsonData.username).to.eql(pm.globals.get(\"admin_2_username\"));\r",
                      "    pm.expect(jsonData.mail).to.eql(pm.globals.get(\"admin_2_email\"));\r",
                      "\r",
                      "    pm.globals.set(\"admin_2_id\", jsonData.id); \r",
                      "    pm.globals.set(\"admin_2_activationToken\", jsonData.accountActivationToken); \r",
                      "    pm.globals.set(\"admin_2_activationEmail\", jsonData.accountActivationEmail); \r",
                      "    pm.globals.set(\"admin_2_iat\", jsonData.iat); \r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9486a6b3-f12a-4026-8c84-e4c3cb8594a5",
                    "exec": [
                      "pm.globals.set(\"admin_2_name\", pm.globals.replaceIn('{{$randomUserName}}'));\r",
                      "pm.globals.set(\"admin_2_username\", pm.globals.replaceIn('{{$randomUserName}}'));\r",
                      "pm.globals.set(\"admin_2_email\",  pm.globals.replaceIn('{{$randomEmail}}__'));\r",
                      "pm.globals.set(\"admin_2_password\",  pm.globals.replaceIn('{{$randomPassword}}'));"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"user\": {\n\t\t\"name\": \"{{admin_2_name}}\",\n\t\t\"username\": \"{{admin_2_username}}\",\n\t\t\"mail\": \"{{admin_2_email}}\",\n\t\t\"password\": \"{{admin_2_password}}\"\n\t},\n\t\"domain\": \"example.com\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/users/"
              },
              "response": []
            },
            {
              "name": "Register - success - USER",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6d7fe1cf-13ab-45d6-b312-b6958f7c1f95",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct data in user obeject\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.string;\r",
                      "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"user_name\"));\r",
                      "    pm.expect(jsonData.username).to.eql(pm.globals.get(\"user_username\"));\r",
                      "    pm.expect(jsonData.mail).to.eql(pm.globals.get(\"user_email\"));\r",
                      "\r",
                      "    pm.globals.set(\"user_id\", jsonData.id); \r",
                      "    pm.globals.set(\"user_activationToken\", jsonData.accountActivationToken); \r",
                      "    pm.globals.set(\"user_activationEmail\", jsonData.accountActivationEmail); \r",
                      "    pm.globals.set(\"user_iat\", jsonData.iat); \r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "b1956d8a-d461-4cfc-be2a-a959ec1a9517",
                    "exec": [
                      "pm.globals.set(\"user_name\", pm.globals.replaceIn('{{$randomUserName}}'));\r",
                      "pm.globals.set(\"user_username\", pm.globals.replaceIn('{{$randomUserName}}'));\r",
                      "pm.globals.set(\"user_email\",  pm.globals.replaceIn('{{$randomEmail}}__'));\r",
                      "pm.globals.set(\"user_password\",  pm.globals.replaceIn('{{$randomPassword}}'));"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"user\": {\n\t\t\"name\": \"{{user_name}}\",\n\t\t\"username\": \"{{user_username}}\",\n\t\t\"mail\": \"{{user_email}}\",\n\t\t\"password\": \"{{user_password}}\"\n\t},\n\t\"domain\": \"example.com\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/users/"
              },
              "response": []
            },
            {
              "name": "Register - success - USER 2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "edf8c896-ae63-45c5-a14e-4cf8565ae232",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct data in user obeject\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.string;\r",
                      "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"user_2_name\"));\r",
                      "    pm.expect(jsonData.username).to.eql(pm.globals.get(\"user_2_username\"));\r",
                      "    pm.expect(jsonData.mail).to.eql(pm.globals.get(\"user_2_email\"));\r",
                      "\r",
                      "    pm.globals.set(\"user_2_id\", jsonData.id); \r",
                      "    pm.globals.set(\"user_2_activationToken\", jsonData.accountActivationToken); \r",
                      "    pm.globals.set(\"user_2_activationEmail\", jsonData.accountActivationEmail); \r",
                      "    pm.globals.set(\"user_2_iat\", jsonData.iat); \r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "c4f65ebe-5d6d-4021-8b05-53cd77138d79",
                    "exec": [
                      "pm.globals.set(\"user_2_name\", pm.globals.replaceIn('{{$randomUserName}}'));\r",
                      "pm.globals.set(\"user_2_username\", pm.globals.replaceIn('{{$randomUserName}}'));\r",
                      "pm.globals.set(\"user_2_email\",  pm.globals.replaceIn('{{$randomEmail}}__'));\r",
                      "pm.globals.set(\"user_2_password\",  pm.globals.replaceIn('{{$randomPassword}}'));"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"user\": {\n\t\t\"name\": \"{{user_2_name}}\",\n\t\t\"username\": \"{{user_2_username}}\",\n\t\t\"mail\": \"{{user_2_email}}\",\n\t\t\"password\": \"{{user_2_password}}\"\n\t},\n\t\"domain\": \"example.com\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/users/"
              },
              "response": []
            },
            {
              "name": "Register - success - DRIVER",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "94818002-b206-4a79-87dc-41f8de7cc80f",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct data in user object\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.string;\r",
                      "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"driver_name\"));\r",
                      "    pm.expect(jsonData.username).to.eql(pm.globals.get(\"driver_username\"));\r",
                      "    pm.expect(jsonData.mail).to.eql(pm.globals.get(\"driver_email\"));\r",
                      "\r",
                      "    pm.globals.set(\"driver_id\", jsonData.id); \r",
                      "    pm.globals.set(\"driver_activationToken\", jsonData.accountActivationToken); \r",
                      "    pm.globals.set(\"driver_activationEmail\", jsonData.accountActivationEmail); \r",
                      "    pm.globals.set(\"driver_iat\", jsonData.iat); \r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "a0ea027c-1644-4bd6-8f25-6b841d0e5bb5",
                    "exec": [
                      "pm.globals.set(\"driver_name\", pm.globals.replaceIn('{{$randomUserName}}'));\r",
                      "pm.globals.set(\"driver_username\", pm.globals.replaceIn('{{$randomUserName}}'));\r",
                      "pm.globals.set(\"driver_email\",  pm.globals.replaceIn('{{$randomEmail}}__'));\r",
                      "pm.globals.set(\"driver_password\",  pm.globals.replaceIn('{{$randomPassword}}'));"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"user\": {\n\t\t\"name\": \"{{driver_name}}\",\n\t\t\"username\": \"{{driver_username}}\",\n\t\t\"mail\": \"{{driver_email}}\",\n\t\t\"password\": \"{{driver_password}}\"\n\t},\n\t\"domain\": \"example.com\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/users/"
              },
              "response": []
            },
            {
              "name": "Register - success - PASSENGER",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "171550b1-8cd9-42a7-bc0b-d1763b165cff",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct data in user object\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.string;\r",
                      "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"passenger_name\"));\r",
                      "    pm.expect(jsonData.username).to.eql(pm.globals.get(\"passenger_username\"));\r",
                      "    pm.expect(jsonData.mail).to.eql(pm.globals.get(\"passenger_email\"));\r",
                      "\r",
                      "    pm.globals.set(\"passenger_id\", jsonData.id); \r",
                      "    pm.globals.set(\"passenger_activationToken\", jsonData.accountActivationToken); \r",
                      "    pm.globals.set(\"passenger_activationEmail\", jsonData.accountActivationEmail); \r",
                      "    pm.globals.set(\"passenger_iat\", jsonData.iat); \r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "147e0cec-eb10-469e-a3d0-438a048ef4d0",
                    "exec": [
                      "pm.globals.set(\"passenger_name\", pm.globals.replaceIn('{{$randomUserName}}'));\r",
                      "pm.globals.set(\"passenger_username\", pm.globals.replaceIn('{{$randomUserName}}'));\r",
                      "pm.globals.set(\"passenger_email\",  pm.globals.replaceIn('{{$randomEmail}}__'));\r",
                      "pm.globals.set(\"passenger_password\",  pm.globals.replaceIn('{{$randomPassword}}'));"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"user\": {\n\t\t\"name\": \"{{passenger_name}}\",\n\t\t\"username\": \"{{passenger_username}}\",\n\t\t\"mail\": \"{{passenger_email}}\",\n\t\t\"password\": \"{{passenger_password}}\"\n\t},\n\t\"domain\": \"example.com\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/users/"
              },
              "response": []
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Activate",
          "item": [
            {
              "name": "Activate - success - MAIN",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "81a8bc77-1e80-4e3a-903c-5417344849ce",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ac68d750-fdf7-4154-b04a-69a643ee12f2",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Successful GET request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(204);\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": "newman_backend:3000/users/verify/{{creator_activationEmail}}/{{creator_activationToken}}"
              },
              "response": []
            },
            {
              "name": "Activate - invalid - used",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9ce58d3a-2d58-48da-826d-2a6b02ae0224",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "32f89236-bf5b-4324-b8bf-b116ccb729b0",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Failed GET request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(400);\r",
                      "});\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Correct data in user object\", function () {\r",
                      "    pm.expect(jsonData.code).to.eql(\"USED\");\r",
                      "    pm.expect(jsonData.message).to.eql(\"User is already verified\");\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": "newman_backend:3000/users/verify/{{creator_activationEmail}}/{{creator_activationToken}}"
              },
              "response": []
            },
            {
              "name": "Activate - invalid - gone",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f58bb1d8-36aa-4fb6-b710-42e74d78d341",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "b28d8e5e-769e-4d5c-b1e3-ec871ef1016e",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Failed GET request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(410);\r",
                      "});\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Correct data in user object\", function () {\r",
                      "    pm.expect(jsonData.code).to.eql(\"GONE\");\r",
                      "    pm.expect(jsonData.message).to.eql(\"Requested entity is not present anymore\");\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": "newman_backend:3000/users/verify/unknown/{{creator_activationToken}}"
              },
              "response": []
            },
            {
              "name": "Activate - invalid - invalid token",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "5459c783-09dd-4dd9-bfe8-10fe85be2840",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "9beadf68-0808-4045-ac53-755759bc8f2a",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Failed GET request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(400);\r",
                      "});\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Correct data in user object\", function () {\r",
                      "    pm.expect(jsonData.code).to.eql(\"INVALID\");\r",
                      "    pm.expect(jsonData.message).to.eql(\"Provided token is not valid\");\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": "newman_backend:3000/users/verify/{{creator_activationEmail}}/invalidToken"
              },
              "response": []
            },
            {
              "name": "Activate - success - ADMIN",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "54a898a6-d4a6-4f0b-86c8-d40e510b4f6c",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "c98f6f3d-3767-4841-97f6-4e6baead34ab",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Successful GET request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(204);\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": "newman_backend:3000/users/verify/{{admin_activationEmail}}/{{admin_activationToken}}"
              },
              "response": []
            },
            {
              "name": "Activate - success - ADMIN 2",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f234f97b-cf7a-4c3b-9f1b-9bd318fc73cb",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "09d3753d-3b3e-42ce-8c8a-b47295bc29d0",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Successful GET request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(204);\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": "newman_backend:3000/users/verify/{{admin_2_activationEmail}}/{{admin_2_activationToken}}"
              },
              "response": []
            },
            {
              "name": "Activate - success - USER",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "27fd82f7-ceae-40e2-a54a-9a3c5b26e122",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "b8b34499-761b-48d4-b36e-0d00a055af49",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Successful GET request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(204);\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": "newman_backend:3000/users/verify/{{user_activationEmail}}/{{user_activationToken}}"
              },
              "response": []
            },
            {
              "name": "Activate - success - USER 2",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7864d579-e36a-44de-be4d-c9c56d1c01fd",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "3721843b-0965-49b3-8891-dd3d2dd8cf37",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Successful GET request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(204);\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": "newman_backend:3000/users/verify/{{user_2_activationEmail}}/{{user_2_activationToken}}"
              },
              "response": []
            },
            {
              "name": "Activate - success - DRIVER",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "2cbfb1ae-2771-4dd1-910d-0fa5e4728a24",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "01fc5094-bc88-4063-9107-ced9dd41c12e",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Successful GET request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(204);\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": "newman_backend:3000/users/verify/{{driver_activationEmail}}/{{driver_activationToken}}"
              },
              "response": []
            },
            {
              "name": "Activate - success - PASSENGER",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "403fd1c4-20ea-4584-a7e5-41492e06e31d",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "f9ecb558-d064-4cb0-9d7d-81efce8a48cd",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Successful GET request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(204);\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": "newman_backend:3000/users/verify/{{passenger_activationEmail}}/{{passenger_activationToken}}"
              },
              "response": []
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Login",
          "item": [
            {
              "name": "Login - successful - MAIN",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "213944a3-f4fd-4f8d-9f50-b781fcde7c82",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "pm.test(\"Successful GET request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct data\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"creator_name\"));\r",
                      "    pm.expect(jsonData.username).to.eql(pm.globals.get(\"creator_username\"));\r",
                      "    pm.expect(jsonData.mail).to.eql(pm.globals.get(\"creator_email\"));\r",
                      "    pm.expect(jsonData.iat).to.eql(pm.globals.get(\"creator_iat\"));\r",
                      "\r",
                      "    pm.expect(jsonData.token).to.be.string;\r",
                      "    pm.expect(jsonData.refreshToken.length).to.equal(40);\r",
                      "\r",
                      "    pm.globals.set(\"creator_token\", jsonData.token); \r",
                      "    pm.globals.set(\"creator_refreshToken\", jsonData.refreshToken); \r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\": \"{{creator_email}}\",\r\n    \"password\": \"{{creator_password}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/auth/login"
              },
              "response": []
            },
            {
              "name": "Login - invalid username",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "b72e9588-205c-48ee-903a-d0fd4ec1512c",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8fa526e2-761f-41a6-8860-0af9f8637123",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.be.oneOf([401]);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct error code\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(\"INVALID_CREDENTIALS\");\r",
                      "    pm.expect(jsonData.message).to.eql(\"Invalid password or username\");\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\": \"invalid\",\r\n    \"password\": \"{{creator_password}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/auth/login"
              },
              "response": []
            },
            {
              "name": "Login - invalid password",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9d5fd8eb-6fec-46b5-85c9-7d79faab734a",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "7c7be180-083e-471f-9e98-4ca0dfb391b5",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.be.oneOf([401]);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct error code\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(\"INVALID_CREDENTIALS\");\r",
                      "    pm.expect(jsonData.message).to.eql(\"Invalid password or username\");\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\": \"{{creator_username}}\",\r\n    \"password\": \"invalid\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/auth/login"
              },
              "response": []
            },
            {
              "name": "Login - successful - ADMIN",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "171ca78e-55fa-4387-99f0-f48e97a9e21f",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "pm.test(\"Successful GET request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct data\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"admin_name\"));\r",
                      "    pm.expect(jsonData.username).to.eql(pm.globals.get(\"admin_username\"));\r",
                      "    pm.expect(jsonData.mail).to.eql(pm.globals.get(\"admin_email\"));\r",
                      "    pm.expect(jsonData.iat).to.eql(pm.globals.get(\"admin_iat\"));\r",
                      "\r",
                      "    pm.expect(jsonData.token).to.be.string;\r",
                      "    pm.expect(jsonData.refreshToken.length).to.equal(40);\r",
                      "\r",
                      "    pm.globals.set(\"admin_token\", jsonData.token); \r",
                      "    pm.globals.set(\"admin_refreshToken\", jsonData.refreshToken); \r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\": \"{{admin_email}}\",\r\n    \"password\": \"{{admin_password}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/auth/login"
              },
              "response": []
            },
            {
              "name": "Login - successful - ADMIN 2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b37c889b-42f3-4533-8779-a9dab0d20e85",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "pm.test(\"Successful GET request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct data\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"admin_2_name\"));\r",
                      "    pm.expect(jsonData.username).to.eql(pm.globals.get(\"admin_2_username\"));\r",
                      "    pm.expect(jsonData.mail).to.eql(pm.globals.get(\"admin_2_email\"));\r",
                      "    pm.expect(jsonData.iat).to.eql(pm.globals.get(\"admin_2_iat\"));\r",
                      "\r",
                      "    pm.expect(jsonData.token).to.be.string;\r",
                      "    pm.expect(jsonData.refreshToken.length).to.equal(40);\r",
                      "\r",
                      "    pm.globals.set(\"admin_2_token\", jsonData.token); \r",
                      "    pm.globals.set(\"admin_2_refreshToken\", jsonData.refreshToken); \r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\": \"{{admin_2_email}}\",\r\n    \"password\": \"{{admin_2_password}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/auth/login"
              },
              "response": []
            },
            {
              "name": "Login - successful - USER",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4726e594-08b6-449b-a14b-847688dfeee9",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "pm.test(\"Successful GET request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct data\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"user_name\"));\r",
                      "    pm.expect(jsonData.username).to.eql(pm.globals.get(\"user_username\"));\r",
                      "    pm.expect(jsonData.mail).to.eql(pm.globals.get(\"user_email\"));\r",
                      "    pm.expect(jsonData.iat).to.eql(pm.globals.get(\"user_iat\"));\r",
                      "\r",
                      "    pm.expect(jsonData.token).to.be.string;\r",
                      "    pm.expect(jsonData.refreshToken.length).to.equal(40);\r",
                      "\r",
                      "    pm.globals.set(\"user_token\", jsonData.token); \r",
                      "    pm.globals.set(\"user_refreshToken\", jsonData.refreshToken); \r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\": \"{{user_email}}\",\r\n    \"password\": \"{{user_password}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/auth/login"
              },
              "response": []
            },
            {
              "name": "Login - successful - USER 2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4bad3335-bc7b-49b0-98ba-a6c6887dfcc5",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "pm.test(\"Successful GET request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct data\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"user_2_name\"));\r",
                      "    pm.expect(jsonData.username).to.eql(pm.globals.get(\"user_2_username\"));\r",
                      "    pm.expect(jsonData.mail).to.eql(pm.globals.get(\"user_2_email\"));\r",
                      "    pm.expect(jsonData.iat).to.eql(pm.globals.get(\"user_2_iat\"));\r",
                      "\r",
                      "    pm.expect(jsonData.token).to.be.string;\r",
                      "    pm.expect(jsonData.refreshToken.length).to.equal(40);\r",
                      "\r",
                      "    pm.globals.set(\"user_2_token\", jsonData.token); \r",
                      "    pm.globals.set(\"user_2_refreshToken\", jsonData.refreshToken); \r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\": \"{{user_2_email}}\",\r\n    \"password\": \"{{user_2_password}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/auth/login"
              },
              "response": []
            },
            {
              "name": "Login - successful - DRIVER",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1e6c94f2-9343-46a8-97e5-23a9cb52340a",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Successful GET request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(200);\r",
                      "});\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Correct data\", function () {\r",
                      "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"driver_name\"));\r",
                      "    pm.expect(jsonData.username).to.eql(pm.globals.get(\"driver_username\"));\r",
                      "    pm.expect(jsonData.mail).to.eql(pm.globals.get(\"driver_email\"));\r",
                      "    pm.expect(jsonData.iat).to.eql(pm.globals.get(\"driver_iat\"));\r",
                      "\r",
                      "    pm.expect(jsonData.token).to.be.string;\r",
                      "    pm.expect(jsonData.refreshToken.length).to.equal(40);\r",
                      "});\r",
                      "\r",
                      "pm.globals.set(\"driver_token\", jsonData.token); \r",
                      "pm.globals.set(\"driver_refreshToken\", jsonData.refreshToken); "
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\": \"{{driver_email}}\",\r\n    \"password\": \"{{driver_password}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/auth/login"
              },
              "response": []
            },
            {
              "name": "Login - successful - PASSENGER",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e58ffbe0-2c4a-4d8f-928c-1c8f3d517c33",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Successful GET request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(200);\r",
                      "});\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Correct data\", function () {\r",
                      "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"passenger_name\"));\r",
                      "    pm.expect(jsonData.username).to.eql(pm.globals.get(\"passenger_username\"));\r",
                      "    pm.expect(jsonData.mail).to.eql(pm.globals.get(\"passenger_email\"));\r",
                      "    pm.expect(jsonData.iat).to.eql(pm.globals.get(\"passenger_iat\"));\r",
                      "\r",
                      "    pm.expect(jsonData.token).to.be.string;\r",
                      "    pm.expect(jsonData.refreshToken.length).to.equal(40);\r",
                      "});\r",
                      "\r",
                      "pm.globals.set(\"passenger_token\", jsonData.token); \r",
                      "pm.globals.set(\"passenger_refreshToken\", jsonData.refreshToken); "
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\": \"{{passenger_email}}\",\r\n    \"password\": \"{{passenger_password}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/auth/login"
              },
              "response": []
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Token",
          "item": [
            {
              "name": "New Token - success",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0252bad0-3b14-4349-a909-0d971926e231",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(201);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "\r",
                      "pm.test(\"Correct data in obeject\", function () {\r",
                      "    pm.expect(jsonData.data.token.length).to.be.string;\r",
                      "    pm.expect(jsonData.data.refreshToken).to.equal(pm.globals.get(\"creator_refreshToken\"));\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t\"user\": {\r\n\t\t\"id\": \"{{creator_id}}\"\r\n\t},\r\n\t\"refreshToken\": \"{{creator_refreshToken}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/auth/token"
              },
              "response": []
            },
            {
              "name": "New Token - invalid refresh token",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5925d890-67b1-46f2-99b4-3743b7dcbe58",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(401);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct error code\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(\"UNAUTHORIZED\");\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"user\": {\n\t\t\"id\": \"{{creator_id}}\"\n\t},\n\t\"refreshToken\": \"invalid\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/auth/token"
              },
              "response": []
            },
            {
              "name": "New Token - invalid user id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "653a4a8d-6073-4f61-9fdf-73e0d3f8ae64",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(401);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct error code\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(\"UNAUTHORIZED\");\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"user\": {\n\t\t\"id\": \"invalid_subject\"\n\t},\n\t\"refreshToken\": \"{{refreshToken}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/auth/token"
              },
              "response": []
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        }
      ],
      "protocolProfileBehavior": {}
    },
    {
      "name": "Appointment",
      "item": [
        {
          "name": "Create",
          "item": [
            {
              "name": "Create - success - no link - MAIN",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9fbf155d-0359-4a0f-8d61-f2c965f26c45",
                    "exec": [
                      "const moment = require('moment');\r",
                      "\r",
                      "var date = pm.globals.replaceIn('{{$randomDateFuture}}');\r",
                      "var date_unix = Date.parse(date);\r",
                      "var date_final = moment(date_unix).format(\"YYYY-MM-DDThh:mm:ss.sZ\");\r",
                      "\r",
                      "var deadline = pm.globals.replaceIn('{{$randomDatePast}}');\r",
                      "var deadline_unix = Date.parse(deadline);\r",
                      "var deadline_final = moment(deadline_unix).format(\"YYYY-MM-DDThh:mm:ss.sZ\");\r",
                      "\r",
                      "pm.globals.set(\"appointment_title\", pm.globals.replaceIn('{{$randomJobTitle}}'));\r",
                      "pm.globals.set(\"appointment_description\", pm.globals.replaceIn('{{$randomLoremSentence}}'));\r",
                      "pm.globals.set(\"appointment_location\",  pm.globals.replaceIn('{{$randomCity}}'));\r",
                      "pm.globals.set(\"appointment_date\",  date_final);\r",
                      "pm.globals.set(\"appointment_deadline\",  deadline_final);\r",
                      "pm.globals.set(\"appointment_addition_1\",  pm.globals.replaceIn('addition_1'));\r",
                      "pm.globals.set(\"appointment_addition_2\",  pm.globals.replaceIn('addition_2'));\r",
                      "pm.globals.set(\"appointment_driverAddition\",  false);"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "54a5c6a8-0920-49e5-979e-cf54959cc20c",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(201);\r",
                      "});\r",
                      "\r",
                      "const moment = require('moment');\r",
                      "\r",
                      "pm.test(\"Correct data in obeject\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.string;\r",
                      "    console.log(jsonData.id)\r",
                      "    pm.expect(jsonData.title).to.eql(pm.globals.get(\"appointment_title\"));\r",
                      "    console.log(jsonData.title + '_' + pm.globals.get(\"appointment_title\"))\r",
                      "    pm.expect(jsonData.description).to.eql(pm.globals.get(\"appointment_description\"));\r",
                      "    console.log(jsonData.description + '_' + pm.globals.get(\"appointment_description\"))\r",
                      "    pm.expect(jsonData.location).to.eql(pm.globals.get(\"appointment_location\"));\r",
                      "    console.log(jsonData.location + '_' + pm.globals.get(\"appointment_location\"))\r",
                      "    pm.expect(jsonData.driverAddition).to.eql(pm.globals.get(\"appointment_driverAddition\"));\r",
                      "    console.log(jsonData.driverAddition + '_' + pm.globals.get(\"appointment_driverAddition\"))\r",
                      "\r",
                      "    var date = pm.globals.replaceIn(jsonData.date);\r",
                      "    var date_unix = Date.parse(date);\r",
                      "    var date_final = moment(date_unix).format(\"YYYY-MM-DDThh:mm:ss.sZ\");\r",
                      "\r",
                      "    var deadline = pm.globals.replaceIn(jsonData.deadline);\r",
                      "    var deadline_unix = Date.parse(deadline);\r",
                      "    var deadline_final = moment(deadline_unix).format(\"YYYY-MM-DDThh:mm:ss.sZ\");\r",
                      "    \r",
                      "    pm.expect(date_final).to.eql(pm.globals.get(\"appointment_date\"));\r",
                      "    console.log(date_final + '_' + pm.globals.get(\"appointment_date\"))\r",
                      "    pm.expect(deadline_final).to.eql(pm.globals.get(\"appointment_deadline\"));\r",
                      "    console.log(deadline_final + '_' + pm.globals.get(\"appointment_deadline\"))\r",
                      "\r",
                      "    pm.expect(jsonData.link.length).to.equal(5);\r",
                      "    console.log(jsonData.link + '_needs to be length 5');\r",
                      "\r",
                      "    pm.globals.set(\"appointment_id\", jsonData.id); \r",
                      "    pm.globals.set(\"appointment_link\", jsonData.link); \r",
                      "    pm.globals.set(\"appointment_addition_1_id\", jsonData.additions[0].id); \r",
                      "    pm.globals.set(\"appointment_addition_2_id\", jsonData.additions[1].id); \r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{creator_token}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"title\": \"{{appointment_title}}\",\r\n    \"description\": \"{{appointment_description}}\",\r\n    \"location\": \"{{appointment_location}}\",\r\n    \"date\": \"{{appointment_date}}\",\r\n    \"deadline\": \"{{appointment_deadline}}\",\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_addition_1}}\"\r\n    }, {\r\n        \"name\": \"{{appointment_addition_2}}\"\r\n    }],\r\n    \"driverAddition\": {{appointment_driverAddition}}\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/appointment"
              },
              "response": []
            },
            {
              "name": "Create - success - no link - TEST",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8246e010-a515-446b-aa58-c27090f6f260",
                    "exec": [
                      "const moment = require('moment');\r",
                      "\r",
                      "var date = pm.globals.replaceIn('{{$randomDateFuture}}');\r",
                      "var date_unix = Date.parse(date);\r",
                      "var date_final = moment(date_unix).format(\"YYYY-MM-DDThh:mm:ss.sZ\");\r",
                      "\r",
                      "var deadline = pm.globals.replaceIn('{{$randomDatePast}}');\r",
                      "var deadline_unix = Date.parse(deadline);\r",
                      "var deadline_final = moment(deadline_unix).format(\"YYYY-MM-DDThh:mm:ss.sZ\");\r",
                      "\r",
                      "pm.globals.set(\"appointment_test_title\", pm.globals.replaceIn('{{$randomJobTitle}}'));\r",
                      "pm.globals.set(\"appointment_test_description\", pm.globals.replaceIn('{{$randomLoremSentence}}'));\r",
                      "pm.globals.set(\"appointment_test_location\",  pm.globals.replaceIn('{{$randomCity}}'));\r",
                      "pm.globals.set(\"appointment_test_date\",  date_final);\r",
                      "pm.globals.set(\"appointment_test_deadline\",  deadline_final);\r",
                      "pm.globals.set(\"appointment_test_addition_1\",  pm.globals.replaceIn('addition_1'));\r",
                      "pm.globals.set(\"appointment_test_addition_2\",  pm.globals.replaceIn('addition_2'));"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "dfb46828-51d9-4eed-b5d1-9017475d850f",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(201);\r",
                      "});\r",
                      "\r",
                      "const moment = require('moment');\r",
                      "\r",
                      "pm.test(\"Correct data in obeject\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.id).to.be.string;\r",
                      "    pm.expect(jsonData.title).to.eql(pm.globals.get(\"appointment_test_title\"));\r",
                      "    pm.expect(jsonData.description).to.eql(pm.globals.get(\"appointment_test_description\"));\r",
                      "    pm.expect(jsonData.location).to.eql(pm.globals.get(\"appointment_test_location\"));\r",
                      "\r",
                      "    var date = pm.globals.replaceIn(jsonData.date);\r",
                      "    var date_unix = Date.parse(date);\r",
                      "    var date_final = moment(date_unix).format(\"YYYY-MM-DDThh:mm:ss.sZ\");\r",
                      "\r",
                      "    var deadline = pm.globals.replaceIn(jsonData.deadline);\r",
                      "    var deadline_unix = Date.parse(deadline);\r",
                      "    var deadine_final = moment(deadline_unix).format(\"YYYY-MM-DDThh:mm:ss.sZ\");\r",
                      "    \r",
                      "    pm.expect(date_final).to.eql(pm.globals.get(\"appointment_test_date\"));\r",
                      "    pm.expect(deadine_final).to.eql(pm.globals.get(\"appointment_test_deadline\"));\r",
                      "\r",
                      "    pm.expect(jsonData.link.length).to.equal(5);\r",
                      "\r",
                      "    pm.globals.set(\"appointment_test_id\", jsonData.id); \r",
                      "    pm.globals.set(\"appointment_test_link\", jsonData.link); \r",
                      "    pm.globals.set(\"appointment_test_addition_1_id\", jsonData.additions[0].id); \r",
                      "    pm.globals.set(\"appointment_test_addition_2_id\", jsonData.additions[1].id); \r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{creator_token}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"title\": \"{{appointment_test_title}}\",\r\n    \"description\": \"{{appointment_test_description}}\",\r\n    \"location\": \"{{appointment_test_location}}\",\r\n    \"date\": \"{{appointment_test_date}}\",\r\n    \"deadline\": \"{{appointment_test_deadline}}\",\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_test_addition_1}}\"\r\n    }, {\r\n        \"name\": \"{{appointment_test_addition_2}}\"\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/appointment",
                "description": "Appointment needed for link in use update"
              },
              "response": []
            },
            {
              "name": "Create - invalid - date < deadline",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "d964a444-39c6-4e38-b3c6-9f1a3df378c8",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "00e66f20-dcbc-4f97-b19c-e3a5add8e675",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(400);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct data in obeject\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(\"INVALID_VALUES\");\r",
                      "    pm.expect(jsonData.data).to.eql([\"date\"]);\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{creator_token}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"title\": \"{{appointment_title}}\",\r\n    \"description\": \"{{appointment_description}}\",\r\n    \"location\": \"{{appointment_location}}\",\r\n    \"date\": \"{{appointment_deadline}}\",\r\n    \"deadline\": \"{{appointment_date}}\",\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_addition_1}}\"\r\n    }, {\r\n        \"name\": \"{{appointment_addition_2}}\"\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/appointment"
              },
              "response": []
            },
            {
              "name": "Create - success - link",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "49c23c7f-b03d-4472-9acc-696875fad499",
                    "exec": [
                      "const moment = require('moment');\r",
                      "\r",
                      "var date = pm.globals.replaceIn('{{$randomDateFuture}}');\r",
                      "var date_unix = Date.parse(date);\r",
                      "var date_final = moment(date_unix).format(\"YYYY-MM-DDThh:mm:ss.sZ\");;\r",
                      "\r",
                      "var deadline = pm.globals.replaceIn('{{$randomDatePast}}');\r",
                      "var deadline_unix = Date.parse(deadline);\r",
                      "var deadline_final = moment(deadline_unix).format(\"YYYY-MM-DDThh:mm:ss.sZ\");\r",
                      "\r",
                      "pm.variables.set(\"any_appointment_title\", pm.globals.replaceIn('{{$randomJobTitle}}'));\r",
                      "pm.variables.set(\"any_appointment_link\", pm.globals.replaceIn('{{$randomPassword}}'));\r",
                      "pm.variables.set(\"any_appointment_description\", pm.globals.replaceIn('{{$randomLoremSentence}}'));\r",
                      "pm.variables.set(\"any_appointment_location\",  pm.globals.replaceIn('{{$randomCity}}'));\r",
                      "pm.variables.set(\"any_appointment_date\",  date_final);\r",
                      "pm.variables.set(\"any_appointment_deadline\",  deadline_final);\r",
                      "pm.variables.set(\"any_appointment_addition_1\",  pm.globals.replaceIn('addition_1'));\r",
                      "pm.variables.set(\"any_appointment_addition_2\",  pm.globals.replaceIn('addition_2'));"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4778e600-7b60-47b4-b399-439e54ef21ae",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct data in obeject\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "\r",
                      "    pm.expect(jsonData.link).to.eql(pm.variables.get(\"any_appointment_link\"));\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{creator_token}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"title\": \"{{any_appointment_title}}\",\r\n    \"link\": \"{{any_appointment_link}}\",\r\n    \"description\": \"{{any_appointment_description}}\",\r\n    \"location\": \"{{any_appointment_location}}\",\r\n    \"date\": \"{{any_appointment_date}}\",\r\n    \"deadline\": \"{{any_appointment_deadline}}\",\r\n    \"additions\": [{\r\n        \"name\": \"{{any_appointment_addition_1}}\"\r\n    }, {\r\n        \"name\": \"{{any_appointment_addition_2}}\"\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/appointment"
              },
              "response": []
            },
            {
              "name": "Create - invalid - link in use",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "bb05141f-a552-43ca-9900-b28e9b9cb9bd",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "04148eab-8f3a-425d-912d-436c91879e71",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(400);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct data in obeject\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.code).to.eql(\"DUPLICATE_ENTRY\");\r",
                      "    pm.expect(jsonData.data).to.eql([\"link\"]);\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{creator_token}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"title\": \"{{appointment_title}}\",\r\n    \"link\": \"{{appointment_link}}\",\r\n    \"description\": \"{{appointment_description}}\",\r\n    \"location\": \"{{appointment_location}}\",\r\n    \"date\": \"{{appointment_date}}\",\r\n    \"deadline\": \"{{appointment_deadline}}\",\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_addition_1}}\"\r\n    }, {\r\n        \"name\": \"{{appointment_addition_2}}\"\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/appointment"
              },
              "response": []
            },
            {
              "name": "Create - success - duplicate addition",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "a6600527-f7b8-4645-848e-6a9bc0f33225",
                    "exec": [
                      "const moment = require('moment');\r",
                      "\r",
                      "var date = pm.globals.replaceIn('{{$randomDateFuture}}');\r",
                      "var date_unix = Date.parse(date);\r",
                      "var date_final = moment(date_unix).format(\"YYYY-MM-DDThh:mm:ss.sZ\");;\r",
                      "\r",
                      "var deadline = pm.globals.replaceIn('{{$randomDatePast}}');\r",
                      "var deadline_unix = Date.parse(deadline);\r",
                      "var deadline_final = moment(deadline_unix).format(\"YYYY-MM-DDThh:mm:ss.sZ\");\r",
                      "\r",
                      "pm.variables.set(\"any_appointment_title\", pm.globals.replaceIn('{{$randomJobTitle}}'));\r",
                      "pm.variables.set(\"any_appointment_description\", pm.globals.replaceIn('{{$randomLoremSentence}}'));\r",
                      "pm.variables.set(\"any_appointment_location\",  pm.globals.replaceIn('{{$randomCity}}'));\r",
                      "pm.variables.set(\"any_appointment_date\",  date_final);\r",
                      "pm.variables.set(\"any_appointment_deadline\",  deadline_final);\r",
                      "pm.variables.set(\"any_appointment_addition_1\",  pm.globals.replaceIn('addition_1'));"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "35deb4f2-33bd-496c-9c0c-153328d19483",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct data in obeject\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "\r",
                      "    pm.expect(jsonData.additions.length).to.equal(1);\r",
                      "    pm.expect(jsonData.additions[0].name).to.equal(pm.variables.get('any_appointment_addition_1'));\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{creator_token}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"title\": \"{{any_appointment_title}}\",\r\n    \"description\": \"{{any_appointment_description}}\",\r\n    \"location\": \"{{any_appointment_location}}\",\r\n    \"date\": \"{{any_appointment_date}}\",\r\n    \"deadline\": \"{{any_appointment_deadline}}\",\r\n    \"additions\": [{\r\n        \"name\": \"{{any_appointment_addition_1}}\"\r\n    }, {\r\n        \"name\": \"{{any_appointment_addition_1}}\"\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/appointment"
              },
              "response": []
            },
            {
              "name": "Create - success - maxEnrollments - neg -> null",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "fc8d41d3-d353-42e7-94da-feed7ca23471",
                    "exec": [
                      "const moment = require('moment');\r",
                      "\r",
                      "var date = pm.globals.replaceIn('{{$randomDateFuture}}');\r",
                      "var date_unix = Date.parse(date);\r",
                      "var date_final = moment(date_unix).format(\"YYYY-MM-DDThh:mm:ss.sZ\");;\r",
                      "\r",
                      "var deadline = pm.globals.replaceIn('{{$randomDatePast}}');\r",
                      "var deadline_unix = Date.parse(deadline);\r",
                      "var deadline_final = moment(deadline_unix).format(\"YYYY-MM-DDThh:mm:ss.sZ\");\r",
                      "\r",
                      "pm.variables.set(\"any_appointment_title\", pm.globals.replaceIn('{{$randomJobTitle}}'));\r",
                      "pm.variables.set(\"any_appointment_link\", pm.globals.replaceIn('{{$randomPassword}}'));\r",
                      "pm.variables.set(\"any_appointment_description\", pm.globals.replaceIn('{{$randomLoremSentence}}'));\r",
                      "pm.variables.set(\"any_appointment_location\",  pm.globals.replaceIn('{{$randomCity}}'));\r",
                      "pm.variables.set(\"any_appointment_maxEnrollments\",  Number(-1));\r",
                      "pm.variables.set(\"any_appointment_date\",  date_final);\r",
                      "pm.variables.set(\"any_appointment_deadline\",  deadline_final);\r",
                      "pm.variables.set(\"any_appointment_addition_1\",  pm.globals.replaceIn('addition_1'));\r",
                      "pm.variables.set(\"any_appointment_addition_2\",  pm.globals.replaceIn('addition_2'));"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "925427eb-20a4-4a20-bfa3-de51f192f73d",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct data in object\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.maxEnrollments).to.eql(null);\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{creator_token}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"title\": \"{{any_appointment_title}}\",\r\n    \"link\": \"{{any_appointment_link}}\",\r\n    \"description\": \"{{any_appointment_description}}\",\r\n    \"location\": \"{{any_appointment_location}}\",\r\n    \"maxEnrollment\": {{any_appointment_maxEnrollments}},\r\n    \"date\": \"{{any_appointment_date}}\",\r\n    \"deadline\": \"{{any_appointment_deadline}}\",\r\n    \"additions\": [{\r\n        \"name\": \"{{any_appointment_addition_1}}\"\r\n    }, {\r\n        \"name\": \"{{any_appointment_addition_2}}\"\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/appointment"
              },
              "response": []
            },
            {
              "name": "Create - success - maxEnrollments - undefined -> null",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "49f60f6e-edb7-4516-bbd0-048a2e6fb609",
                    "exec": [
                      "const moment = require('moment');\r",
                      "\r",
                      "var date = pm.globals.replaceIn('{{$randomDateFuture}}');\r",
                      "var date_unix = Date.parse(date);\r",
                      "var date_final = moment(date_unix).format(\"YYYY-MM-DDThh:mm:ss.sZ\");;\r",
                      "\r",
                      "var deadline = pm.globals.replaceIn('{{$randomDatePast}}');\r",
                      "var deadline_unix = Date.parse(deadline);\r",
                      "var deadline_final = moment(deadline_unix).format(\"YYYY-MM-DDThh:mm:ss.sZ\");\r",
                      "\r",
                      "pm.variables.set(\"any_appointment_title\", pm.globals.replaceIn('{{$randomJobTitle}}'));\r",
                      "pm.variables.set(\"any_appointment_link\", pm.globals.replaceIn('{{$randomPassword}}'));\r",
                      "pm.variables.set(\"any_appointment_description\", pm.globals.replaceIn('{{$randomLoremSentence}}'));\r",
                      "pm.variables.set(\"any_appointment_location\",  pm.globals.replaceIn('{{$randomCity}}'));\r",
                      "pm.variables.set(\"any_appointment_maxEnrollments\",  undefined);\r",
                      "pm.variables.set(\"any_appointment_date\",  date_final);\r",
                      "pm.variables.set(\"any_appointment_deadline\",  deadline_final);\r",
                      "pm.variables.set(\"any_appointment_addition_1\",  pm.globals.replaceIn('addition_1'));\r",
                      "pm.variables.set(\"any_appointment_addition_2\",  pm.globals.replaceIn('addition_2'));"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "309a3357-82b5-49d3-9030-d4eede10236e",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct data in object\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.maxEnrollments).to.eql(null);\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{creator_token}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"title\": \"{{any_appointment_title}}\",\r\n    \"link\": \"{{any_appointment_link}}\",\r\n    \"description\": \"{{any_appointment_description}}\",\r\n    \"location\": \"{{any_appointment_location}}\",\r\n    \"maxEnrollment\": -1,\r\n    \"date\": \"{{any_appointment_date}}\",\r\n    \"deadline\": \"{{any_appointment_deadline}}\",\r\n    \"additions\": [{\r\n        \"name\": \"{{any_appointment_addition_1}}\"\r\n    }, {\r\n        \"name\": \"{{any_appointment_addition_2}}\"\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/appointment"
              },
              "response": []
            },
            {
              "name": "Create - success - maxEnrollments - 0 -> null",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "eb53b1ca-d936-41f5-9ddb-dcb5a9a54c6a",
                    "exec": [
                      "const moment = require('moment');\r",
                      "\r",
                      "var date = pm.globals.replaceIn('{{$randomDateFuture}}');\r",
                      "var date_unix = Date.parse(date);\r",
                      "var date_final = moment(date_unix).format(\"YYYY-MM-DDThh:mm:ss.sZ\");;\r",
                      "\r",
                      "var deadline = pm.globals.replaceIn('{{$randomDatePast}}');\r",
                      "var deadline_unix = Date.parse(deadline);\r",
                      "var deadline_final = moment(deadline_unix).format(\"YYYY-MM-DDThh:mm:ss.sZ\");\r",
                      "\r",
                      "pm.variables.set(\"any_appointment_title\", pm.globals.replaceIn('{{$randomJobTitle}}'));\r",
                      "pm.variables.set(\"any_appointment_link\", pm.globals.replaceIn('{{$randomPassword}}'));\r",
                      "pm.variables.set(\"any_appointment_description\", pm.globals.replaceIn('{{$randomLoremSentence}}'));\r",
                      "pm.variables.set(\"any_appointment_location\",  pm.globals.replaceIn('{{$randomCity}}'));\r",
                      "pm.variables.set(\"any_appointment_maxEnrollments\",  Number(0));\r",
                      "pm.variables.set(\"any_appointment_date\",  date_final);\r",
                      "pm.variables.set(\"any_appointment_deadline\",  deadline_final);\r",
                      "pm.variables.set(\"any_appointment_addition_1\",  pm.globals.replaceIn('addition_1'));\r",
                      "pm.variables.set(\"any_appointment_addition_2\",  pm.globals.replaceIn('addition_2'));"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d8c1b141-668f-48f2-91d0-de1b0af4ecbc",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct data in object\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.maxEnrollments).to.eql(null);\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{creator_token}}"
                  }
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"title\": \"{{any_appointment_title}}\",\r\n    \"link\": \"{{any_appointment_link}}\",\r\n    \"description\": \"{{any_appointment_description}}\",\r\n    \"location\": \"{{any_appointment_location}}\",\r\n    \"maxEnrollment\": -1,\r\n    \"date\": \"{{any_appointment_date}}\",\r\n    \"deadline\": \"{{any_appointment_deadline}}\",\r\n    \"additions\": [{\r\n        \"name\": \"{{any_appointment_addition_1}}\"\r\n    }, {\r\n        \"name\": \"{{any_appointment_addition_2}}\"\r\n    }]\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "http://newman_backend:3000/appointment"
              },
              "response": []
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Update",
          "item": [
            {
              "name": "Normal",
              "item": [
                {
                  "name": "Update - invalid - not found -----------------------",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "70c21201-3b32-4ff1-a608-538f5f480ac5",
                        "exec": [
                          "pm.globals.set(\"appointment_title_new\",  pm.globals.replaceIn('{{$randomJobTitle}}'));"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "6070ada2-e1b4-447b-a175-ccc7150de097",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.title).to.eql(pm.globals.get(\"appointment_title_new\"));\r",
                          "\r",
                          "    pm.globals.set(\"appointment_title\", jsonData.title);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"title\": \"{{appointment_title_new}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                },
                {
                  "name": "Update - success - title",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "efeeb217-2c57-4b9f-bc05-0752459b8d41",
                        "exec": [
                          "pm.globals.set(\"appointment_title_new\",  pm.globals.replaceIn('{{$randomJobTitle}}'));"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "30089d4e-ee11-4fd8-875a-a641a0649687",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.title).to.eql(pm.globals.get(\"appointment_title_new\"));\r",
                          "\r",
                          "    pm.globals.set(\"appointment_title\", jsonData.title);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"title\": \"{{appointment_title_new}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                },
                {
                  "name": "Update - success - description",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "95b822d8-3d44-4756-b9e9-332113334455",
                        "exec": [
                          "pm.globals.set(\"appointment_description_new\",  pm.globals.replaceIn('{{$randomLoremSentence}}'));"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "76b9b5d4-f120-4666-9ab0-4881e1c958ae",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.description).to.eql(pm.globals.get(\"appointment_description_new\"));\r",
                          "\r",
                          "    pm.globals.set(\"appointment_description\", jsonData.description);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"description\": \"{{appointment_description_new}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                },
                {
                  "name": "Update - success - location",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "b76ff02e-a212-4eb2-9fd5-0a9764cfc055",
                        "exec": [
                          "pm.globals.set(\"appointment_location_new\",  pm.globals.replaceIn('{{$randomCity}}'));"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "3284a817-84f7-4b23-b33a-07ea534881a3",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.location).to.eql(pm.globals.get(\"appointment_location_new\"));\r",
                          "\r",
                          "    pm.globals.set(\"appointment_location\", jsonData.location);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"location\": \"{{appointment_location_new}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                },
                {
                  "name": "Update - success - link",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "3fdf4995-3128-4c17-b7b3-16ba5e4bdfaa",
                        "exec": [
                          "pm.globals.set(\"appointment_link_new\",  pm.globals.replaceIn('{{$randomPassword}}'));"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "7faee577-a74e-4875-b334-63cffdb16e12",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.link).to.eql(pm.globals.get(\"appointment_link_new\"));\r",
                          "\r",
                          "    pm.globals.set(\"appointment_link\", jsonData.link);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"link\": \"{{appointment_link_new}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                },
                {
                  "name": "Update - invalid - link in use",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "fe47a333-33c0-44f0-90dd-39b1d0a581ae",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "8fbca8ea-f6d6-4eff-8481-fddff81cd193",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(400);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.code).to.eql(\"DUPLICATE_ENTRY\");\r",
                          "    pm.expect(jsonData.data).to.eql([\"link\"]);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"link\": \"{{appointment_test_link}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                },
                {
                  "name": "Update - success - driverAddition - enable",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "9773956d-8ea6-4e9f-b1a6-3821fa73d965",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "f4c2d7c0-b0ff-4556-8206-6895a07aac2f",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.driverAddition).to.eql(true);\r",
                          "\r",
                          "    pm.globals.set(\"appointment_driver_addition\", jsonData.driverAddition);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"driverAddition\": true\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                },
                {
                  "name": "Update - success - driverAddition - disable",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "d6c96b14-778b-419d-b1f8-35879112736c",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "a4e78079-1bbc-4ece-9738-93c93f16c5be",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.driverAddition).to.eql(false);\r",
                          "\r",
                          "    pm.globals.set(\"appointment_driver_addition\", jsonData.driverAddition);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"driverAddition\": false\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "MaxEnrollments",
              "item": [
                {
                  "name": "Update - success - max enrollments",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "b2c67dee-b856-461e-a380-718a07ec86dd",
                        "exec": [
                          "pm.globals.set(\"appointment_maxEnrollments_new\",  Number(pm.globals.replaceIn('{{$randomInt}}')));"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "08277113-b4a3-480a-aa7b-b0e49982f82c",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.maxEnrollments).to.be.above(0);\r",
                          "    pm.expect(jsonData.maxEnrollments).to.eql(pm.globals.get(\"appointment_maxEnrollments_new\"));\r",
                          "\r",
                          "    pm.globals.set(\"appointment_maxEnrollments\", jsonData.maxEnrollments);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"maxEnrollments\": {{appointment_maxEnrollments_new}}\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                },
                {
                  "name": "Update - success - max enrollments - neg -> null",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "e037d1e6-a6b9-4efc-b1a7-7afcc328ca92",
                        "exec": [
                          "pm.globals.set(\"appointment_maxEnrollments_new\",  Number(-1));"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "2621792d-97ed-44c2-be23-80d2ef50d68c",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.maxEnrollments).eq(null);\r",
                          "\r",
                          "    pm.globals.set(\"appointment_maxEnrollments\", jsonData.maxEnrollments);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"maxEnrollments\": {{appointment_maxEnrollments_new}}\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                },
                {
                  "name": "Update - success - max enrollments - reset",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "9d58d04f-ed27-4155-a43d-4da3395f0f19",
                        "exec": [
                          "pm.globals.set(\"appointment_maxEnrollments_new\",  undefined);"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "bdabf498-637e-477f-a873-a1abb91065f0",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.maxEnrollments).eq(null);\r",
                          "\r",
                          "    pm.globals.set(\"appointment_maxEnrollments\", jsonData.maxEnrollments);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"maxEnrollments\": {{appointment_maxEnrollments_new}}\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "Additions",
              "item": [
                {
                  "name": "Update - success - addition - add one",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "e4a92a25-d033-4293-a5f9-4e97e4501c0c",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "826388e7-9f74-4e52-ad11-536853eff085",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.additions.length).to.equal(3);\r",
                          "    pm.expect(jsonData.additions[0].name).to.eql(pm.globals.get(\"appointment_addition_1\"));\r",
                          "    pm.expect(jsonData.additions[0].id).to.eql(pm.globals.get(\"appointment_addition_1_id\"));\r",
                          "    pm.expect(jsonData.additions[1].name).to.eql(pm.globals.get(\"appointment_addition_2\"));\r",
                          "    pm.expect(jsonData.additions[1].id).to.eql(pm.globals.get(\"appointment_addition_2_id\"));\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_addition_1}}\"\r\n    }, {\r\n        \"name\": \"{{appointment_addition_2}}\"\r\n    }, {\r\n        \"name\": \"addition_tmp\"\r\n    }]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                },
                {
                  "name": "Update - success - addition - add one - duplicate",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "863793cc-6e06-4dee-bf8f-104b0d6a7ab2",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "6f246af7-48af-43cb-990c-5254f19dbcdc",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.additions.length).to.equal(2);\r",
                          "    pm.expect(jsonData.additions[0].name).to.eql(pm.globals.get(\"appointment_addition_1\"));\r",
                          "    pm.expect(jsonData.additions[0].id).to.eql(pm.globals.get(\"appointment_addition_1_id\"));\r",
                          "    pm.expect(jsonData.additions[1].name).to.eql(pm.globals.get(\"appointment_addition_2\"));\r",
                          "    pm.expect(jsonData.additions[1].id).to.eql(pm.globals.get(\"appointment_addition_2_id\"));\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_addition_1}}\"\r\n    }, {\r\n        \"name\": \"{{appointment_addition_2}}\"\r\n    }, {\r\n        \"name\": \"{{appointment_addition_2}}\"\r\n    }]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                },
                {
                  "name": "Update - success - addition - remove one",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "ba1542ce-d982-410b-9459-34547155476b",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "2fd0adc4-ebe4-456f-88f6-fa90fff01883",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.additions.length).to.equal(2);\r",
                          "    pm.expect(jsonData.additions[0].name).to.eql(pm.globals.get(\"appointment_addition_1\"));\r",
                          "    pm.expect(jsonData.additions[0].id).to.eql(pm.globals.get(\"appointment_addition_1_id\"));\r",
                          "    pm.expect(jsonData.additions[1].name).to.eql(pm.globals.get(\"appointment_addition_2\"));\r",
                          "    pm.expect(jsonData.additions[1].id).to.eql(pm.globals.get(\"appointment_addition_2_id\"));\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_addition_1}}\"\r\n    }, {\r\n        \"name\": \"{{appointment_addition_2}}\"\r\n    }]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "Dates",
              "item": [
                {
                  "name": "Update - success - date",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "75414770-d7aa-48cb-afdb-fd844a4c38b7",
                        "exec": [
                          "const moment = require('moment');\r",
                          "\r",
                          "var date = pm.globals.replaceIn('{{$randomDateFuture}}');\r",
                          "var date_unix = Date.parse(date);\r",
                          "var date_final = moment(date_unix).format(\"YYYY-MM-DDThh:mm:ss.sZ\");;\r",
                          "\r",
                          "pm.globals.set(\"appointment_date_new\",  date_final);"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "2f1dd069-c330-4b77-bbe2-dbb6a3933850",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.date).to.eql(pm.globals.get(\"appointment_date_new\"));\r",
                          "\r",
                          "    pm.globals.set(\"appointment_date\", jsonData.date);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"date\": \"{{appointment_date_new}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                },
                {
                  "name": "Update - invalid - date - is < deadline",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "a7a26db1-7473-4dc1-bde6-ea99b14d3456",
                        "exec": [
                          "const moment = require('moment');\r",
                          "\r",
                          "var date = pm.globals.replaceIn('{{$randomDateFuture}}');\r",
                          "var date_unix = Date.parse(date);\r",
                          "date_unix = date_unix - (10 * 12 * 30 * 24 * 60 * 60000); // 10 years back\r",
                          "var date_final = moment(date_unix).format(\"YYYY-MM-DDThh:mm:ss.sZ\");\r",
                          "\r",
                          "pm.globals.set(\"appointment_date_new\",  date_final);"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "305592e0-8171-4a85-820d-d35d8055912a",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(400);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.code).to.eql(\"INVALID_VALUES\");\r",
                          "    pm.expect(jsonData.data).to.eql([\"date\"]);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"date\": \"{{appointment_date_new}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                },
                {
                  "name": "Update - success - deadline",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "a9562b42-849a-4b2b-9a43-a6f3665dbefc",
                        "exec": [
                          "const moment = require('moment');\r",
                          "\r",
                          "var date = pm.globals.replaceIn('{{$randomDatePast}}');\r",
                          "var date_unix = Date.parse(date);\r",
                          "var date_final = moment(date_unix).format(\"YYYY-MM-DDThh:mm:ss.sZ\");;\r",
                          "\r",
                          "pm.globals.set(\"appointment_deadline_new\",  date_final);"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "417d812e-0dfe-438e-b2ed-2c8f4d008a65",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.deadline).to.eql(pm.globals.get(\"appointment_deadline_new\"));\r",
                          "\r",
                          "    pm.globals.set(\"appointment_deadline\", jsonData.deadline);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"deadline\": \"{{appointment_deadline_new}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                },
                {
                  "name": "Update - invalid - deadline - is > date",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "87930196-2bc5-41d8-9e11-2d4a8950b89b",
                        "exec": [
                          "const moment = require('moment');\r",
                          "\r",
                          "var date = pm.globals.replaceIn('{{$randomDateFuture}}');\r",
                          "var date_unix = Date.parse(date);\r",
                          "date_unix = date_unix + (10 * 12 * 30 * 24 * 60 * 60000); // 10 years forward\r",
                          "var date_final = moment(date_unix).format(\"YYYY-MM-DDThh:mm:ss.sZ\");\r",
                          "\r",
                          "pm.globals.set(\"appointment_deadline_new\",  date_final);"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "0e4402eb-5f4c-402d-91c6-b80047e8a993",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(400);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.code).to.eql(\"INVALID_VALUES\");\r",
                          "    pm.expect(jsonData.data).to.eql([\"deadline\"]);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"deadline\": \"{{appointment_deadline_new}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "Administrators",
              "item": [
                {
                  "name": "Add - success",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8303dc54-80ac-4ed5-8fa2-4ed817601fe8",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(204);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"username\": \"{{admin_username}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}/administrator"
                  },
                  "response": []
                },
                {
                  "name": "Add - invalid - no permission as admin",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b112b3bb-a443-42b5-9326-c74ae7cda1a4",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(403);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.code).to.eql(\"FORBIDDEN\");\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{admin_token}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"username\": \"{{user_username}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}/administrator"
                  },
                  "response": []
                },
                {
                  "name": "Remove - success",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7e35149f-d79e-40ac-a66c-ccf909e7c285",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(204);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"username\": \"{{admin_username}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}/administrator/{{admin_username}}"
                  },
                  "response": []
                },
                {
                  "name": "Add - invalid - tried to add himself - no permissions at all",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "897b135d-122f-4a9a-a2a8-329431595ebe",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(403);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.code).to.eql(\"FORBIDDEN\");\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{admin_token}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"username\": \"{{admin_username}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}/administrator"
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        }
      ],
      "protocolProfileBehavior": {}
    },
    {
      "name": "Enrollments",
      "item": [
        {
          "name": "Create",
          "item": [
            {
              "name": "Logged in",
              "item": [
                {
                  "name": "Create - success - creator - MAIN",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "1ff07ff9-4cb2-44b1-9a49-7e70e99bcd4f",
                        "exec": [
                          "pm.globals.set(\"enrollment_comment\", pm.globals.replaceIn('{{$randomLoremSentence}}'));"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "52f2e05f-676f-4eb2-bc6b-d01ef1a593b5",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(201);\r",
                          "});\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "pm.test(\"Correct data in object\", function () {\r",
                          "    pm.expect(jsonData.id).to.be.string;\r",
                          "    pm.expect(jsonData.name).to.be.oneOf([undefined, null]);\r",
                          "    pm.expect(jsonData.comment).to.eql(pm.globals.get(\"enrollment_comment\"));\r",
                          "    pm.expect(jsonData.creator.name).to.eql(pm.globals.get(\"creator_name\"));\r",
                          "    pm.expect(jsonData.creator.username).to.eql(pm.globals.get(\"creator_username\"));\r",
                          "});\r",
                          "\r",
                          "pm.globals.set(\"enrollment_id\", jsonData.id);"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"appointment\": {\r\n        \"link\": \"{{appointment_link}}\"\r\n    },\r\n    \"comment\": \"{{enrollment_comment}}\",\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_addition_1}}\",\r\n        \"id\": \"{{appointment_addition_1_id}}\"\r\n    }]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/enrollment"
                  },
                  "response": []
                },
                {
                  "name": "Create - invalid - creator - already enrolled",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "eea4b575-f30b-483c-8572-d26ce186e964",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "57107f84-f018-4d98-aa79-f88c3ad9dc38",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(400);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in object\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.code).to.eql(\"DUPLICATE_ENTRY\");\r",
                          "    pm.expect(jsonData.data).to.eql([\"creator\"]);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"appointment\": {\r\n        \"link\": \"{{appointment_link}}\"\r\n    },\r\n    \"comment\": \"{{enrollment_comment}}\",\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_addition_1}}\",\r\n        \"id\": \"{{appointment_addition_1_id}}\"\r\n    }]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/enrollment"
                  },
                  "response": []
                },
                {
                  "name": "---- TMP CHANGE ---- driverAddition - enable",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "6c757c9f-387f-415c-9eb7-eb4ccf1a8ada",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "8572c67f-4839-4315-a06a-37c210a5e981",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.driverAddition).to.eql(true);\r",
                          "\r",
                          "    pm.globals.set(\"appointment_driver_addition\", jsonData.driverAddition);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"driverAddition\": true\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                },
                {
                  "name": "Create - success - driver",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "5c2896a0-df6b-4eb3-b6a1-139aaf94bff4",
                        "exec": [
                          "pm.globals.set(\"enrollment-driver_comment\", pm.globals.replaceIn('{{$randomLoremSentence}}'));\r",
                          "pm.globals.set(\"enrollment-driver_seats\", pm.globals.replaceIn(Number(_.random(1, 10))));\r",
                          "pm.globals.set(\"enrollment-driver_service\", pm.globals.replaceIn(1));"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "8d26fbd2-6b4b-485a-8f16-4fd81745bdca",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(201);\r",
                          "});\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "pm.test(\"Correct data in object - default\", function () {\r",
                          "    pm.expect(jsonData.id).to.be.string;\r",
                          "    pm.expect(jsonData.name).to.be.oneOf([undefined, null]);\r",
                          "    pm.expect(jsonData.comment).to.eql(pm.globals.get(\"enrollment-driver_comment\"));\r",
                          "    pm.expect(jsonData.creator.name).to.eql(pm.globals.get(\"driver_name\"));\r",
                          "    pm.expect(jsonData.creator.username).to.eql(pm.globals.get(\"driver_username\"));\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in object - actual\", function () {\r",
                          "    pm.expect(jsonData.driver.seats).to.eql(pm.globals.get(\"enrollment-driver_seats\"));\r",
                          "    pm.expect(jsonData.driver.service).to.eql(pm.globals.get(\"enrollment-driver_service\"));\r",
                          "});\r",
                          "\r",
                          "pm.globals.set(\"enrollment-driver_id\", jsonData.id);"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{driver_token}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"appointment\": {\r\n        \"link\": \"{{appointment_link}}\"\r\n    },\r\n    \"comment\": \"{{enrollment-driver_comment}}\",\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_addition_1}}\",\r\n        \"id\": \"{{appointment_addition_1_id}}\"\r\n    }],\r\n    \"driver\": {\r\n        \"seats\": {{enrollment-driver_seats}},\r\n        \"service\": {{enrollment-driver_service}}\r\n    }\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/enrollment"
                  },
                  "response": []
                },
                {
                  "name": "Create - success - passenger",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "10a06c13-aa57-4858-b82c-ce61d098fb4d",
                        "exec": [
                          "pm.globals.set(\"enrollment-passenger_comment\", pm.globals.replaceIn('{{$randomLoremSentence}}'));\r",
                          "pm.globals.set(\"enrollment-passenger_requirement\", pm.globals.replaceIn(1));"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "e2156771-7e9e-42ba-8c5a-8f840915d0f4",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(201);\r",
                          "});\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "pm.test(\"Correct data in object - default\", function () {\r",
                          "    pm.expect(jsonData.id).to.be.string;\r",
                          "    pm.expect(jsonData.name).to.be.oneOf([undefined, null]);\r",
                          "    pm.expect(jsonData.comment).to.eql(pm.globals.get(\"enrollment-passenger_comment\"));\r",
                          "    pm.expect(jsonData.creator.name).to.eql(pm.globals.get(\"passenger_name\"));\r",
                          "    pm.expect(jsonData.creator.username).to.eql(pm.globals.get(\"passenger_username\"));\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in object - actual\", function () {\r",
                          "    pm.expect(jsonData.passenger.requirement).to.eql(pm.globals.get(\"enrollment-passenger_requirement\"));\r",
                          "});\r",
                          "\r",
                          "pm.globals.set(\"enrollment-passenger_id\", jsonData.id);"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{passenger_token}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"appointment\": {\r\n        \"link\": \"{{appointment_link}}\"\r\n    },\r\n    \"comment\": \"{{enrollment-passenger_comment}}\",\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_addition_1}}\",\r\n        \"id\": \"{{appointment_addition_1_id}}\"\r\n    }],\r\n    \"passenger\": {\r\n        \"requirement\": {{enrollment-passenger_requirement}}\r\n    }\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/enrollment"
                  },
                  "response": []
                },
                {
                  "name": "---- TMP CHANGE ---- driverAddition - disable",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "c3921ccc-1958-4264-980e-b010c76481de",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "e2b2f23c-254e-48ff-8fcf-dbe97e43aa4c",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.driverAddition).to.eql(false);\r",
                          "\r",
                          "    pm.globals.set(\"appointment_driver_addition\", jsonData.driverAddition);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"driverAddition\": false\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "Unknown",
              "item": [
                {
                  "name": "Create - success - unknown - MAIN",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "c01283ae-dbe4-47ec-82d0-8cf1e4901a2a",
                        "exec": [
                          "pm.globals.set(\"enrollment-unknown_name\", pm.globals.replaceIn('{{$randomFirstName}}'));\r",
                          "pm.globals.set(\"enrollment-unknown_comment\", pm.globals.replaceIn('{{$randomLoremSentence}}'));"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "0010f496-57b0-4e8a-bfab-371a867b5e19",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(201);\r",
                          "});\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "pm.test(\"Correct data in object\", function () {\r",
                          "    pm.expect(jsonData.id).to.be.string;\r",
                          "    pm.expect(jsonData.token).to.be.string;\r",
                          "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"enrollment-unknown_name\"));\r",
                          "    pm.expect(jsonData.comment).to.eql(pm.globals.get(\"enrollment-unknown_comment\"));\r",
                          "});\r",
                          "\r",
                          "pm.globals.set(\"enrollment-unknown_id\", jsonData.id);\r",
                          "pm.globals.set(\"enrollment-unknown_token\", jsonData.token);"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"appointment\": {\r\n        \"link\": \"{{appointment_link}}\"\r\n    },\r\n    \"name\": \"{{enrollment-unknown_name}}\",\r\n    \"comment\": \"{{enrollment-unknown_comment}}\",\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_addition_1}}\",\r\n        \"id\": \"{{appointment_addition_1_id}}\"\r\n    }],\r\n    \"editMail\": \"{{creator_email}}\",\r\n    \"domain\": \"example.com\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/enrollment"
                  },
                  "response": []
                },
                {
                  "name": "Create - success - unknown - comment empty -> null",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "dc372891-3347-4c7f-ad1f-b9b5e982bab7",
                        "exec": [
                          "pm.globals.set(\"enrollment-tmp_name\", pm.globals.replaceIn('{{$randomFirstName}}'));"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "2392488c-0873-4170-b0ab-be6f700db1ef",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(201);\r",
                          "});\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "pm.test(\"Correct data in object - default\", function () {\r",
                          "    pm.expect(jsonData.id).to.be.string;\r",
                          "    pm.expect(jsonData.token).to.be.string;\r",
                          "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"enrollment-tmp_name\"));\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in object - actual\", function () {\r",
                          "    pm.expect(jsonData.comment).to.be.oneOf([undefined, null]);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"appointment\": {\r\n        \"link\": \"{{appointment_link}}\"\r\n    },\r\n    \"name\": \"{{enrollment-tmp_name}}\",\r\n    \"comment\": \"\",\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_addition_1}}\",\r\n        \"id\": \"{{appointment_addition_1_id}}\"\r\n    }],\r\n    \"editMail\": \"{{creator_email}}\",\r\n    \"domain\": \"example.com\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/enrollment"
                  },
                  "response": []
                },
                {
                  "name": "Create - success - unknown - comment undefined -> null",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "47103e80-8fe0-45df-92bc-129112a0f3e6",
                        "exec": [
                          "pm.globals.set(\"enrollment-tmp_name\", pm.globals.replaceIn('{{$randomFirstName}}'));"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "b05f726e-78df-40e5-9024-fe46b9614d4b",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(201);\r",
                          "});\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "pm.test(\"Correct data in object - default\", function () {\r",
                          "    pm.expect(jsonData.id).to.be.string;\r",
                          "    pm.expect(jsonData.token).to.be.string;\r",
                          "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"enrollment-tmp_name\"));\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in object - actual\", function () {\r",
                          "    pm.expect(jsonData.comment).to.be.oneOf([undefined, null]);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"appointment\": {\r\n        \"link\": \"{{appointment_link}}\"\r\n    },\r\n    \"name\": \"{{enrollment-tmp_name}}\",\r\n    \"comment\": \"\",\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_addition_1}}\",\r\n        \"id\": \"{{appointment_addition_1_id}}\"\r\n    }],\r\n    \"editMail\": \"{{creator_email}}\",\r\n    \"domain\": \"example.com\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/enrollment"
                  },
                  "response": []
                },
                {
                  "name": "Create - success - unknown - additions (1)",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "08a0445d-936e-404c-aa94-556ab15718d1",
                        "exec": [
                          "pm.globals.set(\"enrollment-tmp_name\", pm.globals.replaceIn('{{$randomFirstName}}'));"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "8837566f-ed4d-4b5c-94af-9ab5db654acb",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(201);\r",
                          "});\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "pm.test(\"Correct data in object - default\", function () {\r",
                          "    pm.expect(jsonData.id).to.be.string;\r",
                          "    pm.expect(jsonData.token).to.be.string;\r",
                          "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"enrollment-tmp_name\"));\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in object - actual\", function () {\r",
                          "    pm.expect(jsonData.additions.length).to.equal(1);\r",
                          "    pm.expect(jsonData.additions[0].id).to.eql(pm.globals.get(\"appointment_addition_1_id\"));\r",
                          "    pm.expect(jsonData.additions[0].name).to.eql(pm.globals.get(\"appointment_addition_1\"));\r",
                          "});\r",
                          "\r",
                          "\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"appointment\": {\r\n        \"link\": \"{{appointment_link}}\"\r\n    },\r\n    \"name\": \"{{enrollment-tmp_name}}\",\r\n    \"comment\": \"{{enrollment_comment}}\",\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_addition_1}}\",\r\n        \"id\": \"{{appointment_addition_1_id}}\"\r\n    }],\r\n    \"editMail\": \"{{creator_email}}\",\r\n    \"domain\": \"example.com\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/enrollment"
                  },
                  "response": []
                },
                {
                  "name": "Create - success - unknown - additions (2)",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "e7dcb98c-e315-49ec-9379-7a80fa4bae1e",
                        "exec": [
                          "pm.globals.set(\"enrollment-tmp_name\", pm.globals.replaceIn('{{$randomFirstName}}'));"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "739d3aaa-82c4-4746-830b-c3733e80e2d9",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(201);\r",
                          "});\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "pm.test(\"Correct data in object - default\", function () {\r",
                          "    pm.expect(jsonData.id).to.be.string;\r",
                          "    pm.expect(jsonData.token).to.be.string;\r",
                          "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"enrollment-tmp_name\"));\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in object - actual\", function () {\r",
                          "    pm.expect(jsonData.additions.length).to.equal(2);\r",
                          "    pm.expect(jsonData.additions[0].id).to.eql(pm.globals.get(\"appointment_addition_1_id\"));\r",
                          "    pm.expect(jsonData.additions[0].name).to.eql(pm.globals.get(\"appointment_addition_1\"));\r",
                          "    pm.expect(jsonData.additions[1].id).to.eql(pm.globals.get(\"appointment_addition_2_id\"));\r",
                          "    pm.expect(jsonData.additions[1].name).to.eql(pm.globals.get(\"appointment_addition_2\"));\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"appointment\": {\r\n        \"link\": \"{{appointment_link}}\"\r\n    },\r\n    \"name\": \"{{enrollment-tmp_name}}\",\r\n    \"comment\": \"{{enrollment_comment}}\",\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_addition_1}}\",\r\n        \"id\": \"{{appointment_addition_1_id}}\"\r\n    } , {\r\n        \"name\": \"{{appointment_addition_2}}\",\r\n        \"id\": \"{{appointment_addition_2_id}}\"\r\n    }],\r\n    \"editMail\": \"{{creator_email}}\",\r\n    \"domain\": \"example.com\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/enrollment"
                  },
                  "response": []
                },
                {
                  "name": "Create - invalid - unknown - unknown addition",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "6b4f42f7-c9c9-4e1b-b121-d3d5e767d618",
                        "exec": [
                          "pm.globals.set(\"enrollment-tmp_name\", pm.globals.replaceIn('{{$randomFirstName}}'));"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "9a224c32-54f9-41f7-bfb9-8eb18659406f",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(404);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in object\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.code).to.eql(\"NOT_FOUND\");\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"appointment\": {\r\n        \"link\": \"{{appointment_link}}\"\r\n    },\r\n    \"name\": \"{{enrollment-tmp_name}}\",\r\n    \"comment\": \"{{enrollment_comment}}\",\r\n    \"additions\": [{\r\n        \"name\": \"invalid\",\r\n        \"id\": \"invalid\"\r\n    }],\r\n    \"editMail\": \"{{creator_email}}\",\r\n    \"domain\": \"example.com\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/enrollment"
                  },
                  "response": []
                },
                {
                  "name": "---- TMP CHANGE ---- driverAddition - enable",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "ffc1a209-3d40-4745-96f3-8edd2ccd69f7",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "7872efe1-31dc-4dbb-9eb6-1f48663956b2",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.driverAddition).to.eql(true);\r",
                          "\r",
                          "    pm.globals.set(\"appointment_driver_addition\", jsonData.driverAddition);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"driverAddition\": true\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                },
                {
                  "name": "Create - success - unknown - MAIN DRIVER",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "6a91f255-627b-45e6-ba01-45e23f082ecf",
                        "exec": [
                          "pm.globals.set(\"enrollment-unknown-driver_name\", pm.globals.replaceIn('{{$randomFirstName}}'));\r",
                          "pm.globals.set(\"enrollment-unknown-driver_comment\", pm.globals.replaceIn('{{$randomLoremSentence}}'));\r",
                          "pm.globals.set(\"enrollment-unknown-driver_seats\", pm.globals.replaceIn(Number(_.random(1, 10))));\r",
                          "pm.globals.set(\"enrollment-unknown-driver_service\", pm.globals.replaceIn(1));"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "286ab4c2-44fe-49c6-87bb-91aacd0cdce3",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(201);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "pm.test(\"Correct data in object - default\", function () {\r",
                          "    pm.expect(jsonData.id).to.be.string;\r",
                          "    pm.expect(jsonData.token).to.be.string;\r",
                          "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"enrollment-unknown-driver_name\"));\r",
                          "    pm.expect(jsonData.comment).to.eql(pm.globals.get(\"enrollment-unknown-driver_comment\"));\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in object - actual\", function () {\r",
                          "    pm.expect(jsonData.driver.seats).to.eql(pm.globals.get(\"enrollment-unknown-driver_seats\"));\r",
                          "    pm.expect(jsonData.driver.service).to.eql(pm.globals.get(\"enrollment-unknown-driver_service\"));\r",
                          "});\r",
                          "\r",
                          "pm.globals.set(\"enrollment-unknown-driver_id\", jsonData.id);\r",
                          "pm.globals.set(\"enrollment-unknown-driver_token\", jsonData.token);"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"appointment\": {\r\n        \"link\": \"{{appointment_link}}\"\r\n    },\r\n    \"name\": \"{{enrollment-unknown-driver_name}}\",\r\n    \"comment\": \"{{enrollment-unknown-driver_comment}}\",\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_addition_1}}\",\r\n        \"id\": \"{{appointment_addition_1_id}}\"\r\n    }],\r\n    \"driver\": {\r\n        \"seats\": {{enrollment-unknown-driver_seats}},\r\n        \"service\": {{enrollment-unknown-driver_service}}\r\n    },\r\n    \"editMail\": \"{{creator_email}}\",\r\n    \"domain\": \"example.com\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/enrollment"
                  },
                  "response": []
                },
                {
                  "name": "Create - success - unknown - MAIN PASSENGER",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "995c8551-8755-4137-bd8c-05e8411ffdec",
                        "exec": [
                          "pm.globals.set(\"enrollment-unknown-passenger_name\", pm.globals.replaceIn('{{$randomFirstName}}'));\r",
                          "pm.globals.set(\"enrollment-unknown-passenger_comment\", pm.globals.replaceIn('{{$randomLoremSentence}}'));\r",
                          "pm.globals.set(\"enrollment-unknown-passenger_requirement\", pm.globals.replaceIn(1));"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "14b03f32-bfec-4ac5-8ecf-b7ac09452be9",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(201);\r",
                          "});\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "pm.test(\"Correct data in object - default\", function () {\r",
                          "    pm.expect(jsonData.id).to.be.string;\r",
                          "    pm.expect(jsonData.token).to.be.string;\r",
                          "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"enrollment-unknown-passenger_name\"));\r",
                          "    pm.expect(jsonData.comment).to.eql(pm.globals.get(\"enrollment-unknown-passenger_comment\"));\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in object - actual\", function () {\r",
                          "    pm.expect(jsonData.passenger.requirement).to.eql(pm.globals.get(\"enrollment-unknown-passenger_requirement\"));\r",
                          "});\r",
                          "\r",
                          "pm.globals.set(\"enrollment-unknown-passenger_id\", jsonData.id);\r",
                          "pm.globals.set(\"enrollment-unknown-passenger_token\", jsonData.token);"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"appointment\": {\r\n        \"link\": \"{{appointment_link}}\"\r\n    },\r\n    \"name\": \"{{enrollment-unknown-passenger_name}}\",\r\n    \"comment\": \"{{enrollment-unknown-passenger_comment}}\",\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_addition_1}}\",\r\n        \"id\": \"{{appointment_addition_1_id}}\"\r\n    }],\r\n    \"passenger\": {\r\n        \"requirement\": {{enrollment-unknown-passenger_requirement}}\r\n    },\r\n    \"editMail\": \"{{creator_email}}\",\r\n    \"domain\": \"example.com\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/enrollment"
                  },
                  "response": []
                },
                {
                  "name": "---- TMP CHANGE ---- driverAddition - disable",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "139f67dc-a8f0-4795-936f-531ca2fcf926",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "a6138db7-9d6a-4c9f-abe7-a603f15f8849",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.driverAddition).to.eql(false);\r",
                          "\r",
                          "    pm.globals.set(\"appointment_driver_addition\", jsonData.driverAddition);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"driverAddition\": false\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Update",
          "item": [
            {
              "name": "Direct",
              "item": [
                {
                  "name": "Logged in",
                  "item": [
                    {
                      "name": "Update - success - unknown - name",
                      "event": [
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "13bce202-851f-4156-85ee-2c27c87b011a",
                            "exec": [
                              "pm.globals.set(\"enrollment-unknown_name_new\", pm.globals.replaceIn('{{$randomFirstName}}'));"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "test",
                          "script": {
                            "id": "e1f1036b-5855-4921-89d4-0cd8e244fb4d",
                            "exec": [
                              "pm.test(\"Response time is less than 200ms\", function () {\r",
                              "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"Successful PUT request\", function () {\r",
                              "    pm.expect(pm.response.code).to.eql(200);\r",
                              "});\r",
                              "\r",
                              "var jsonData = pm.response.json();\r",
                              "\r",
                              "pm.test(\"Correct data in object\", function () {\r",
                              "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"enrollment-unknown_name_new\"));\r",
                              "});\r",
                              "\r",
                              "pm.globals.set(\"enrollment-unknown_name\", jsonData.name);"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PUT",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{enrollment-unknown_name_new}}\",\r\n    \"token\": \"{{enrollment-unknown_token}}\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "http://newman_backend:3000/enrollment/{{enrollment-unknown_id}}"
                      },
                      "response": []
                    },
                    {
                      "name": "Update - invalid - unknown - name taken",
                      "event": [
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "1c338baa-e8a5-4b7e-90ba-d6776aa213b5",
                            "exec": [
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "test",
                          "script": {
                            "id": "4ba47960-0bd3-4e1c-bead-91d69806ab66",
                            "exec": [
                              "pm.test(\"Response time is less than 200ms\", function () {\r",
                              "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"Successful POST request\", function () {\r",
                              "    pm.expect(pm.response.code).to.eql(400);\r",
                              "});\r",
                              "\r",
                              "var jsonData = pm.response.json();\r",
                              "\r",
                              "pm.test(\"Correct data in object\", function () {\r",
                              "    pm.expect(jsonData.code).to.eql(\"DUPLICATE_ENTRY\");\r",
                              "    pm.expect(jsonData.data).to.eql([\"name\"]);\r",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PUT",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"name\": \"{{enrollment-unknown-driver_name}}\",\r\n    \"token\": \"{{enrollment-unknown_token}}\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "http://newman_backend:3000/enrollment/{{enrollment-unknown_id}}"
                      },
                      "response": []
                    },
                    {
                      "name": "Update - success - unknown - comment",
                      "event": [
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "dbf05435-3e9c-4e6b-a519-c4d6291bb5a5",
                            "exec": [
                              "pm.globals.set(\"enrollment-unknown_comment_new\", pm.globals.replaceIn('{{$randomLoremSentence}}'));"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "test",
                          "script": {
                            "id": "cec1dc1f-4006-4e5b-8980-41820c29ef67",
                            "exec": [
                              "pm.test(\"Response time is less than 200ms\", function () {\r",
                              "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                              "});\r",
                              "\r",
                              "pm.test(\"Successful PUT request\", function () {\r",
                              "    pm.expect(pm.response.code).to.eql(200);\r",
                              "});\r",
                              "\r",
                              "var jsonData = pm.response.json();\r",
                              "\r",
                              "pm.test(\"Correct data in object\", function () {\r",
                              "    pm.expect(jsonData.comment).to.eql(pm.globals.get(\"enrollment-unknown_comment_new\"));\r",
                              "});\r",
                              "\r",
                              "pm.globals.set(\"enrollment-unknown_comment\", jsonData.comment);"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "PUT",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n    \"comment\": \"{{enrollment-unknown_comment_new}}\",\r\n    \"token\": \"{{enrollment-unknown_token}}\"\r\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "http://newman_backend:3000/enrollment/{{enrollment-unknown_id}}"
                      },
                      "response": []
                    }
                  ],
                  "protocolProfileBehavior": {},
                  "_postman_isSubFolder": true
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "Additions",
              "item": [
                {
                  "name": "Update - success - unknown - additions - add one (1) -> (2)",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "d2665809-8fd8-4497-ad33-474238d5f089",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "d8c022c7-12c8-4922-8ae7-1392908077f7",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "pm.test(\"Correct data in object\", function () {\r",
                          "    pm.expect(jsonData.additions.length).to.equal(2);\r",
                          "    pm.expect(jsonData.additions[0].id).to.eql(pm.globals.get(\"appointment_addition_1_id\"));\r",
                          "    pm.expect(jsonData.additions[0].name).to.eql(pm.globals.get(\"appointment_addition_1\"));\r",
                          "    pm.expect(jsonData.additions[1].id).to.eql(pm.globals.get(\"appointment_addition_2_id\"));\r",
                          "    pm.expect(jsonData.additions[1].name).to.eql(pm.globals.get(\"appointment_addition_2\"));\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_addition_1}}\",\r\n        \"id\": \"{{appointment_addition_1_id}}\"\r\n    },{\r\n        \"name\": \"{{appointment_addition_2}}\",\r\n        \"id\": \"{{appointment_addition_2_id}}\"\r\n    }],\r\n    \"token\": \"{{enrollment-unknown_token}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/enrollment/{{enrollment-unknown_id}}"
                  },
                  "response": []
                },
                {
                  "name": "Update - success - additions - remove one (1) -> (0)",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "8096f5c8-1e96-4477-8da5-88f424a10a70",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "2f8474bd-9808-45be-979b-7835386d4eef",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "\r",
                          "pm.test(\"Correct data in object\", function () {\r",
                          "    pm.expect(jsonData.additions.length).to.equal(0);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"additions\": [],\r\n    \"token\": \"{{enrollment-unknown_token}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/enrollment/{{enrollment-unknown_id}}"
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "DriverAddition",
              "item": [
                {
                  "name": "---- TMP CHANGE ---- driverAddition - enable",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "fcf7f0f0-08c3-4e5a-9987-407de9610069",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "524f843c-785c-47c0-a1df-086bc4b65095",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.driverAddition).to.eql(true);\r",
                          "\r",
                          "    pm.globals.set(\"appointment_driver_addition\", jsonData.driverAddition);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"driverAddition\": true\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                },
                {
                  "name": "Update - success - driver - seats",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "96d4b3a7-3c7f-4e4c-b616-7591fb4d8826",
                        "exec": [
                          "pm.globals.set(\"enrollment-unknown-driver_seats_new\", Number(pm.globals.get(\"enrollment-unknown-driver_seats\")) + 1);"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "897a24bc-913a-44f9-8b00-c6eae43c3abe",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "pm.test(\"Correct data in object\", function () {\r",
                          "    pm.expect(jsonData.driver.seats).to.eql(pm.globals.get(\"enrollment-unknown-driver_seats_new\"));\r",
                          "    pm.expect(jsonData.driver.service).to.eql(pm.globals.get(\"enrollment-unknown-driver_service\"));\r",
                          "    \r",
                          "    pm.expect(jsonData.passenger).to.eql(undefined);\r",
                          "});\r",
                          "\r",
                          "pm.globals.set(\"enrollment-unknown-driver_seats\", jsonData.driver.seats)"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"driver\": {\r\n        \"seats\": {{enrollment-unknown-driver_seats_new}}\r\n    },\r\n    \"token\": \"{{enrollment-unknown-driver_token}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/enrollment/{{enrollment-unknown-driver_id}}"
                  },
                  "response": []
                },
                {
                  "name": "Update - success - driver - service",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "df588114-7d83-429d-b3f0-02ed17be9f61",
                        "exec": [
                          "pm.globals.set(\"enrollment-unknown-driver_service_new\", Number(pm.globals.get(\"enrollment-unknown-driver_service\")) + 1);"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "7b91913d-dbe8-4e68-bd4c-e03dcc1d7a9f",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "pm.test(\"Correct data in object\", function () {\r",
                          "    pm.expect(jsonData.driver.seats).to.eql(pm.globals.get(\"enrollment-unknown-driver_seats\"));\r",
                          "    pm.expect(jsonData.driver.service).to.eql(pm.globals.get(\"enrollment-unknown-driver_service_new\"));\r",
                          "    \r",
                          "    pm.expect(jsonData.passenger).to.eql(undefined);\r",
                          "});\r",
                          "\r",
                          "pm.globals.set(\"enrollment-unknown-driver_service\", jsonData.driver.service)"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"driver\": {\r\n        \"service\": {{enrollment-unknown-driver_service_new}}\r\n    },\r\n    \"token\": \"{{enrollment-unknown-driver_token}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/enrollment/{{enrollment-unknown-driver_id}}"
                  },
                  "response": []
                },
                {
                  "name": "Update - success - passenger - requirement",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "78c0bfd3-2cb1-445e-8a52-201af7b7297a",
                        "exec": [
                          "pm.globals.set(\"enrollment-unknown-passenger_requirement_new\", Number(pm.globals.get(\"enrollment-unknown-passenger_requirement\")) + 1);"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "dbbc1d4e-6a81-410b-a38d-afb627a2c9d4",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "pm.test(\"Correct data in object\", function () {\r",
                          "    pm.expect(jsonData.passenger.requirement).to.eql(pm.globals.get(\"enrollment-unknown-passenger_requirement_new\"));\r",
                          "    \r",
                          "    pm.expect(jsonData.driver).to.eql(undefined);\r",
                          "});\r",
                          "\r",
                          "pm.globals.set(\"enrollment-unknown-passenger_requirement\", jsonData.passenger.requirement);"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"passenger\": {\r\n        \"requirement\": {{enrollment-unknown-passenger_requirement_new}}\r\n    }\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/enrollment/{{enrollment-unknown-passenger_id}}"
                  },
                  "response": []
                },
                {
                  "name": "---- TMP CHANGE ---- driverAddition - disable",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "c39e74ae-fd5f-427a-be40-bc347ed6afe5",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "ead2cd1e-b8f9-4921-8867-1278bb8ffa7b",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "pm.test(\"Successful PUT request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.driverAddition).to.eql(false);\r",
                          "\r",
                          "    pm.globals.set(\"appointment_driver_addition\", jsonData.driverAddition);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"driverAddition\": false\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}"
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Delete",
          "item": [
            {
              "name": "Delete - success - creator",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ae2add5d-3546-4042-95ba-cbfcce37636a",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Successful DELETE request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(204);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct data in obeject\", function () {\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{creator_token}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": "http://newman_backend:3000/enrollment/{{enrollment_id}}"
              },
              "response": []
            },
            {
              "name": "Delete - invalid - creator - gone",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8ed86532-0374-444d-b5ea-f79f49ec5286",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Invalid DELETE request | GONE\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(410);\r",
                      "});\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Correct data in object\", function () {\r",
                      "    pm.expect(jsonData.code).to.eql(\"GONE\");\r",
                      "    pm.expect(jsonData.data).to.eql(\"enrollment\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{creator_token}}"
                  }
                },
                "method": "DELETE",
                "header": [],
                "url": "http://newman_backend:3000/enrollment/{{enrollment_id}}"
              },
              "response": []
            },
            {
              "name": "Delete - success - unknown",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f199d05b-583c-43d6-a029-0c7e1ad0c588",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Successful DELETE request\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(204);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Correct data in object\", function () {\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "DELETE",
                "header": [],
                "url": "http://newman_backend:3000/enrollment/{{enrollment-unknown_id}}/{{enrollment-unknown_token}}"
              },
              "response": []
            },
            {
              "name": "Delete - invalid - unknown - gone",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0ba1f00d-1499-494b-a566-018ad7190657",
                    "exec": [
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Invalid DELETE request | GONE\", function () {\r",
                      "    pm.expect(pm.response.code).to.eql(410);\r",
                      "});\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Correct data in object\", function () {\r",
                      "    pm.expect(jsonData.code).to.eql(\"GONE\");\r",
                      "    pm.expect(jsonData.data).to.eql(\"enrollment\");\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "DELETE",
                "header": [],
                "url": "http://newman_backend:3000/enrollment/{{enrollment-unknown_id}}/{{enrollment-unknown_token}}"
              },
              "response": []
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Permission types",
          "item": [
            {
              "name": "Creator Enrollment",
              "item": [
                {
                  "name": "---- Create Enrollment - creator",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "62dc62db-5afa-4043-a794-8ee00b4f8b80",
                        "exec": [
                          "pm.globals.set(\"enrollment_comment\", pm.globals.replaceIn('{{$randomLoremSentence}}'));"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "98ec37c8-061f-4858-9dbb-0ada82134d45",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(201);\r",
                          "});\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "pm.test(\"Correct data in object\", function () {\r",
                          "    pm.expect(jsonData.id).to.be.string;\r",
                          "    pm.expect(jsonData.name).to.be.oneOf([undefined, null]);\r",
                          "    pm.expect(jsonData.comment).to.eql(pm.globals.get(\"enrollment_comment\"));\r",
                          "    pm.expect(jsonData.creator.name).to.eql(pm.globals.get(\"creator_name\"));\r",
                          "    pm.expect(jsonData.creator.username).to.eql(pm.globals.get(\"creator_username\"));\r",
                          "});\r",
                          "\r",
                          "pm.globals.set(\"enrollment_id\", jsonData.id);"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"appointment\": {\r\n        \"link\": \"{{appointment_link}}\"\r\n    },\r\n    \"comment\": \"{{enrollment_comment}}\",\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_addition_1}}\",\r\n        \"id\": \"{{appointment_addition_1_id}}\"\r\n    }]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/enrollment"
                  },
                  "response": []
                },
                {
                  "name": "---- Add Admin",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0c3ef421-359b-424f-960d-b821b9a146d3",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(204);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"username\": \"{{admin_username}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}/administrator"
                  },
                  "response": []
                },
                {
                  "name": "Permission - successful - creator - as creator (enrollment creator)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8d4268a0-88c3-4069-991d-0fc022ac74ab",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "pm.test(\"Correct data in object\", function () {\r",
                          "    pm.expect(jsonData).to.eql(['user']);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": "http://newman_backend:3000/enrollment/{{enrollment_id}}/check-permission"
                  },
                  "response": []
                },
                {
                  "name": "Permission - successful - creator - as admin",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a6bc9b97-4a37-4ed0-b4cf-45dee1728c33",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData).to.eql(['user']);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{admin_token}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": "http://newman_backend:3000/enrollment/{{enrollment_id}}/check-permission"
                  },
                  "response": []
                },
                {
                  "name": "Permission - invalid - creator - as user",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f5b3c48b-8020-4c71-a8df-f1418f7d8611",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(403);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.code).to.eql(\"FORBIDDEN\");\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{user_token}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": "http://newman_backend:3000/enrollment/{{enrollment_id}}/check-permission"
                  },
                  "response": []
                },
                {
                  "name": "Permission - invalid - creator - no permission",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "575ece52-0572-4f8e-af6c-3c4bbf1e84e1",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(403);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.code).to.eql(\"FORBIDDEN\");\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": "http://newman_backend:3000/enrollment/{{enrollment_id}}/check-permission"
                  },
                  "response": []
                },
                {
                  "name": "Permission - invalid - creator - no permission invalid token",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "817149e7-9ab3-434a-9b3b-799a7097d346",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(403);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in object\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.code).to.eql(\"FORBIDDEN\");\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "http://newman_backend:3000/enrollment/{{enrollment_id}}/check-permission?token=anytoken",
                      "protocol": "http",
                      "host": [
                        "newman_backend"
                      ],
                      "port": "3000",
                      "path": [
                        "enrollment",
                        "{{enrollment_id}}",
                        "check-permission"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": "anytoken"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "Admin Enrollment",
              "item": [
                {
                  "name": "---- Create Enrollment - admin",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "7f99a79f-127a-4743-bf6a-0f108ce9a13a",
                        "exec": [
                          "pm.globals.set(\"enrollment-admin_comment\", pm.globals.replaceIn('{{$randomLoremSentence}}'));"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "5c620c38-ea82-496b-acdd-42e3b28e1f42",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(201);\r",
                          "});\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "pm.test(\"Correct data in object\", function () {\r",
                          "    pm.expect(jsonData.id).to.be.string;\r",
                          "    pm.expect(jsonData.name).to.be.oneOf([undefined, null]);\r",
                          "    pm.expect(jsonData.comment).to.eql(pm.globals.get(\"enrollment-admin_comment\"));\r",
                          "    pm.expect(jsonData.creator.name).to.eql(pm.globals.get(\"admin_name\"));\r",
                          "    pm.expect(jsonData.creator.username).to.eql(pm.globals.get(\"admin_username\"));\r",
                          "});\r",
                          "\r",
                          "pm.globals.set(\"enrollment-admin_id\", jsonData.id);"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{admin_token}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"appointment\": {\r\n        \"link\": \"{{appointment_link}}\"\r\n    },\r\n    \"comment\": \"{{enrollment-admin_comment}}\",\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_addition_1}}\",\r\n        \"id\": \"{{appointment_addition_1_id}}\"\r\n    }]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/enrollment"
                  },
                  "response": []
                },
                {
                  "name": "---- Add Admin (admin 2)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "78ebab38-afbc-4780-bafb-a1dd4e821a5b",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(204);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"username\": \"{{admin_2_username}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/appointment/{{appointment_link}}/administrator"
                  },
                  "response": []
                },
                {
                  "name": "Permission - successful - admin - as creator",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "4f159a50-8910-4b73-8f30-878795a28283",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData).to.eql(['user']);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": "http://newman_backend:3000/enrollment/{{enrollment-admin_id}}/check-permission"
                  },
                  "response": []
                },
                {
                  "name": "Permission - successful - admin - as admin (enrollment creator)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "aa326a3f-f566-46f8-94c7-9b340cbae5ef",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData).to.eql(['user']);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{admin_token}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": "http://newman_backend:3000/enrollment/{{enrollment-admin_id}}/check-permission"
                  },
                  "response": []
                },
                {
                  "name": "Permission - successful - admin - as admin_2",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d928012c-88f4-4a1e-b511-7994a5606057",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData).to.eql(['user']);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{admin_2_token}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": "http://newman_backend:3000/enrollment/{{enrollment-admin_id}}/check-permission"
                  },
                  "response": []
                },
                {
                  "name": "Permission - invalid - admin- as user",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "11602f22-5f66-4a6c-a940-3fa427b34d90",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(403);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.code).to.eql(\"FORBIDDEN\");\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{user_token}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": "http://newman_backend:3000/enrollment/{{enrollment-admin_id}}/check-permission"
                  },
                  "response": []
                },
                {
                  "name": "Permission - invalid - admin - no permission",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "4b90c244-cc9c-4f51-b0be-1900e453773a",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(403);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.code).to.eql(\"FORBIDDEN\");\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": "http://newman_backend:3000/enrollment/{{enrollment-creator_id}}/check-permission"
                  },
                  "response": []
                },
                {
                  "name": "Permission - invalid - admin - no permission - invalid token",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7878243d-eeda-4567-97a2-8c077493762c",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(403);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.code).to.eql(\"FORBIDDEN\");\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "http://newman_backend:3000/enrollment/{{enrollment-creator_id}}/check-permission?token=anytoken",
                      "protocol": "http",
                      "host": [
                        "newman_backend"
                      ],
                      "port": "3000",
                      "path": [
                        "enrollment",
                        "{{enrollment-creator_id}}",
                        "check-permission"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": "anytoken"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "User Enrollment",
              "item": [
                {
                  "name": "---- Create Enrollment - user",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "ae410c61-b5f1-4611-9e9c-78f673489f12",
                        "exec": [
                          "pm.globals.set(\"enrollment-user_comment\", pm.globals.replaceIn('{{$randomLoremSentence}}'));"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "900a1703-9b65-4248-829f-a75c59f7d004",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(201);\r",
                          "});\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "pm.test(\"Correct data in object\", function () {\r",
                          "    pm.expect(jsonData.id).to.be.string;\r",
                          "    pm.expect(jsonData.name).to.be.oneOf([undefined, null]);\r",
                          "    pm.expect(jsonData.comment).to.eql(pm.globals.get(\"enrollment-user_comment\"));\r",
                          "    pm.expect(jsonData.creator.name).to.eql(pm.globals.get(\"user_name\"));\r",
                          "    pm.expect(jsonData.creator.username).to.eql(pm.globals.get(\"user_username\"));\r",
                          "});\r",
                          "\r",
                          "pm.globals.set(\"enrollment-user_id\", jsonData.id);"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{user_token}}"
                      }
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"appointment\": {\r\n        \"link\": \"{{appointment_link}}\"\r\n    },\r\n    \"comment\": \"{{enrollment-user_comment}}\",\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_addition_1}}\",\r\n        \"id\": \"{{appointment_addition_1_id}}\"\r\n    }]\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/enrollment"
                  },
                  "response": []
                },
                {
                  "name": "Permission - successful - admin - as creator",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6a9dd2b6-efd4-4b43-9f80-a4145d9a74a2",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData).to.eql(['user']);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": "http://newman_backend:3000/enrollment/{{enrollment-user_id}}/check-permission"
                  },
                  "response": []
                },
                {
                  "name": "Permission - successful - admin - as admin",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e0d61b5f-ea34-4cd0-b990-6c5d7a2c29d2",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData).to.eql(['user']);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{admin_token}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": "http://newman_backend:3000/enrollment/{{enrollment-user_id}}/check-permission"
                  },
                  "response": []
                },
                {
                  "name": "Permission - successful - user - as user (enrollment creator)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0f4fecf5-669d-44f6-845b-1815d8c5c0bc",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData).to.eql(['user']);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{user_token}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": "http://newman_backend:3000/enrollment/{{enrollment-user_id}}/check-permission"
                  },
                  "response": []
                },
                {
                  "name": "Permission - invalid - admin - as user_2",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "60139733-305e-49fa-b516-0e1bdf8268c2",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(403);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.code).to.eql(\"FORBIDDEN\");\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{user_2_token}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": "http://newman_backend:3000/enrollment/{{enrollment-user_id}}/check-permission"
                  },
                  "response": []
                },
                {
                  "name": "Permission - invalid - admin - no permission",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "feed2c3a-ba5f-46f6-89e7-176a8421a426",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(403);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.code).to.eql(\"FORBIDDEN\");\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": "http://newman_backend:3000/enrollment/{{enrollment-user_id}}/check-permission"
                  },
                  "response": []
                },
                {
                  "name": "Permission - invalid - admin - no permission - invalid token",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "019ba1dc-de15-462b-b08e-998b0675d47d",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(403);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.code).to.eql(\"FORBIDDEN\");\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "http://newman_backend:3000/enrollment/{{enrollment-user_id}}/check-permission?token=anytoken",
                      "protocol": "http",
                      "host": [
                        "newman_backend"
                      ],
                      "port": "3000",
                      "path": [
                        "enrollment",
                        "{{enrollment-user_id}}",
                        "check-permission"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": "anytoken"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "Unknown Enrollment",
              "item": [
                {
                  "name": "---- Create Enrollment - unknown",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "1490c7e5-5992-4a0e-be40-4976852430db",
                        "exec": [
                          "pm.globals.set(\"enrollment-unknown_name\", pm.globals.replaceIn('{{$randomFirstName}}'));\r",
                          "pm.globals.set(\"enrollment-unknown_comment\", pm.globals.replaceIn('{{$randomLoremSentence}}'));"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "2663d5ed-e7d9-45c9-8e11-5614b735aa5c",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful POST request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(201);\r",
                          "});\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "pm.test(\"Correct data in object\", function () {\r",
                          "    pm.expect(jsonData.id).to.be.string;\r",
                          "    pm.expect(jsonData.token).to.be.string;\r",
                          "    pm.expect(jsonData.name).to.eql(pm.globals.get(\"enrollment-unknown_name\"));\r",
                          "    pm.expect(jsonData.comment).to.eql(pm.globals.get(\"enrollment-unknown_comment\"));\r",
                          "});\r",
                          "\r",
                          "pm.globals.set(\"enrollment-unknown_id\", jsonData.id);\r",
                          "pm.globals.set(\"enrollment-unknown_token\", jsonData.token);"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"appointment\": {\r\n        \"link\": \"{{appointment_link}}\"\r\n    },\r\n    \"name\": \"{{enrollment-unknown_name}}\",\r\n    \"comment\": \"{{enrollment-unknown_comment}}\",\r\n    \"additions\": [{\r\n        \"name\": \"{{appointment_addition_1}}\",\r\n        \"id\": \"{{appointment_addition_1_id}}\"\r\n    }],\r\n    \"editMail\": \"{{creator_email}}\",\r\n    \"domain\": \"example.com\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "http://newman_backend:3000/enrollment"
                  },
                  "response": []
                },
                {
                  "name": "Permission - successful - unknown - as creator",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d162c198-7430-4db6-8dfd-58f6548dc55a",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    pm.expect(jsonData).to.eql(['user']);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": "http://newman_backend:3000/enrollment/{{enrollment-unknown_id}}/check-permission"
                  },
                  "response": []
                },
                {
                  "name": "Permission - successful - unknown - as creator and token",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9684a4c0-8942-4118-baa2-8b57f1a01516",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    pm.expect(jsonData).to.eql(['user', 'token']);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{creator_token}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "http://newman_backend:3000/enrollment/{{enrollment-unknown_id}}/check-permission?token={{enrollment-unknown_token}}",
                      "protocol": "http",
                      "host": [
                        "newman_backend"
                      ],
                      "port": "3000",
                      "path": [
                        "enrollment",
                        "{{enrollment-unknown_id}}",
                        "check-permission"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": "{{enrollment-unknown_token}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Permission - successful - unknown - as admin",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "77c9d241-ec52-4c74-b857-f1434229361a",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData).to.eql(['user']);\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{admin_token}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": "http://newman_backend:3000/enrollment/{{enrollment-unknown_id}}/check-permission"
                  },
                  "response": []
                },
                {
                  "name": "Permission - invalid - unknown - as user",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e55e5606-56a6-4a49-9bcd-92abff1a77bd",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(403);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.code).to.eql(\"FORBIDDEN\");\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{user_token}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": "http://newman_backend:3000/enrollment/{{enrollment-unknown_id}}/check-permission"
                  },
                  "response": []
                },
                {
                  "name": "Permission - success - unknown - as unknown (enrollment creator) (by token)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "55af4695-55f7-4487-a1af-82e0a28fde3f",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(200);\r",
                          "});\r",
                          "\r",
                          "var jsonData = pm.response.json();\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    pm.expect(jsonData).to.eql(['token']);\r",
                          "});\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "http://newman_backend:3000/enrollment/{{enrollment-unknown_id}}/check-permission?token={{enrollment-unknown_token}}",
                      "protocol": "http",
                      "host": [
                        "newman_backend"
                      ],
                      "port": "3000",
                      "path": [
                        "enrollment",
                        "{{enrollment-unknown_id}}",
                        "check-permission"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": "{{enrollment-unknown_token}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Permission - invalid - unknown - no permission",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "821fbcb3-99c9-4c00-b735-7d2c1cd78520",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(403);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.code).to.eql(\"FORBIDDEN\");\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": "http://newman_backend:3000/enrollment/{{enrollment-na_id}}/check-permission"
                  },
                  "response": []
                },
                {
                  "name": "Permission - invalid - unknown - no permission - invalid token",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "25377f41-a323-4126-be50-0312b7e0a706",
                        "exec": [
                          "pm.test(\"Response time is less than 200ms\", function () {\r",
                          "    pm.expect(pm.response.responseTime).to.be.below(250);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Successful GET request\", function () {\r",
                          "    pm.expect(pm.response.code).to.eql(403);\r",
                          "});\r",
                          "\r",
                          "pm.test(\"Correct data in obeject\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.code).to.eql(\"FORBIDDEN\");\r",
                          "});\r",
                          "\r",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "http://newman_backend:3000/enrollment/{{enrollment-na_id}}/check-permission?token=anytoken",
                      "protocol": "http",
                      "host": [
                        "newman_backend"
                      ],
                      "port": "3000",
                      "path": [
                        "enrollment",
                        "{{enrollment-na_id}}",
                        "check-permission"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": "anytoken"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        }
      ],
      "protocolProfileBehavior": {}
    }
  ],
  "protocolProfileBehavior": {}
}
